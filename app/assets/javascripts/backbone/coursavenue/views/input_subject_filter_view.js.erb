CoursAvenue.module('Views', function(Module, App, Backbone, Marionette, $, _) {

    Module.InputSubjectFilterView = Backbone.Marionette.ItemView.extend({
        template: Module.templateDirname() + 'input_subject_filter_view',
        subjects_header_template: Module.templateDirname() + 'input_subject_algolia/subjects_header_template',
        subjects_template: Module.templateDirname() + 'input_subject_algolia/subjects_template',
        structure_header_template: Module.templateDirname() + 'input_subject_algolia/structure_header_template',
        structure_template: Module.templateDirname() + 'input_subject_algolia/structure_template',

        ui: {
            '$subjects_input': 'input'
        },

        events: {
            'typeahead:selected @ui.$subjects_input': 'announce'
        },

        onRender: function onRender () {
            this.$city_input        = $('[name=city]');
            var that                = this;
            var optionalSearchWords = GLOBAL.EXCLUDED_SEARCH_WORDS
            var client              = algoliasearch('<%= ENV['ALGOLIA_APPLICATION_ID'] %>', '<%= ENV['ALGOLIA_SEARCH_API_KEY'] %>');
            this.ui.$subjects_input.typeahead({
                highlight : true,
                minLength: 1,
                autoselect: true,
                limit: 10
            }, {
                displayKey: 'name',
                templates: {
                    header: JST[this.subjects_header_template](),
                    suggestion: function suggestion (data) {
                        return JST[that.subjects_template](data);
                    }
                },
                source: client.initIndex('<%= Subject.index_name %>')
                              .ttAdapter({ hitsPerPage  : 7,
                                           optionalWords: optionalSearchWords,
                                           analytics    : <%= Rails.env.production? ? true : false %>
                                         })
            }, {
                displayKey: 'name',
                templates: {
                    header: JST[this.structure_header_template](),
                    suggestion: function suggestion (data) {
                        return JST[that.structure_template](data);
                    }
                },
                source: client.initIndex('<%= Structure.index_name %>').ttAdapter({ hitsPerPage: 7, optionalWords: optionalSearchWords })
            });
        },

        announce: function announce (e, data) {
            var new_action;
            if (data.type == 'structure') {
                if (CoursAvenue.isProduction()) { ga('send', 'event', 'search', 'etablissement', data.name); }
                window.location.href = data.url;
                return;
            } else {
                if (CoursAvenue.isProduction()) { ga('send', 'event', 'search', 'discipline', data.name); }
            }
            this.trigger('filter:subject_input', {
                root_subject_id  : data.root,
                parent_subject_id: data.parent,
                subject_id       : data.slug,
                subject_name     : data.name,
                depth            : data.depth
            });
        }.debounce(GLOBAL.DEBOUNCE_DELAY),


        // Clears all the given filters
        clear: function clear (filters) {
            this.ui.$subjects_input.val('');
            this.announce();
        }
    });
});

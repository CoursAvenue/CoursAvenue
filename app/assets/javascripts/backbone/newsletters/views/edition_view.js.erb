Newsletter.module('Views', function(Module, App, Backbone, Marionette, $, _) {
    Module.EditionView = Backbone.Marionette.CompositeView.extend({
        template: Module.templateDirname() + 'edition_view',
        tagName: 'div',
        childViewContainer: '[data-type=bloc]',
        childView: Module.BlocView,

        events: {
            'submit': 'saveModel'
        },

        initialize: function initialize () {
            this._modelBinder = new Backbone.ModelBinder();
            _.bindAll(this, 'saveModel', 'savingError', 'savingSuccess');
        },

        saveModel: function saveModel (event) {
            event.preventDefault();
            this.model.save({}, {
                error:   this.savingError,
                success: this.savingSuccess
            });

            return false
        },

        // Error callback when saving the model.
        savingError: function savingError (model, response, options) {
        },

        // Success callback when saving the model.
        savingSuccess: function savingSuccess (model, response, options) {
            this.collection.each(function (model) {
                model.save();
            });
        },

        // The templateHelpers function allows us to create helper methods that
        // can be called from our template.
        //
        // More information:
        // <http://git.io/xpMt>
        templateHelpers: function templateHelpers () {
            return {
                // Renders the bloc's template with the bloc's attributes.
                renderBlocs: function renderedBlocs (bloc) {
                    var content = '';

                    this.blocs.forEach(function(bloc) {
                        var path = Module.templateDirname() + 'bloc_' + bloc.get('type');

                        bloc.set('index', bloc.get('position') - 1);
                        content += JST[path](bloc.attributes);
                        bloc.unset('index', { silent: true });
                    });

                    return content;
                },
                formAction: Routes.pro_structure_newsletters_path(window.coursavenue.bootstrap.structure),
                csrfName: $('meta[name="csrf-param"]').attr('content'),
                csrfToken: $('meta[name="csrf-token"]').attr('content'),
            };
        },

        // Custom render function.
        // We start by calling the Marionette CompositeView's render function on this view.
        // We then bind the model to the inputs by calling modelBinder.
        render: function render () {
            Backbone.Marionette.CompositeView.prototype.render.apply(this, arguments);

            this._modelBinder.bind(this.model, this.$('form'));
        },

        // TODO: Save newsletter title before update.
        // TODO: Ask for confirmation ("Changing layout will lose your current
        // blocs. Are you sure you want to continue ?").
        updateLayout: function updateLayout (data) {
            var model = data.model;

            // If the layout is already selected, do nothing.
            if (model.get('id') == this.model.get('layout_id')) {
                return ;
            }
            // Reset the bloc collection.
            this.collection.reset();

            // Store the new layout id and trigger a bloc refresh.
            this.model.set('layout_id', model.get('id'));

            // Update the bloc collection.
            this.collection.add(this.model.get('blocs'));
        },
    });
});

- truncate_length = 255 if truncate_length.nil?
- lazy            = false if lazy.nil?
.flexbox.push--bottom{itemprop: true, itemscope: true, itemtype:'http://data-vocabulary.org/Review'}
  .flexbox__item.soft--left.v-top.text--center.visuallyhidden--palm>
    = link_to structure_url(comment.structure, subdomain: 'www'), class: 'block media-photo', target: :_blank, class: 'muted-link block' do
      - if lazy
        = image_tag '', class: 'block rounded--circle', width: 60, data: { behavior: 'lazy-load', original: comment.structure.logo.url(:small_thumb) }
      - else
        = image_tag comment.structure.logo.url(:small_thumb), class: 'block rounded--circle', width: 60
  .flexbox__item.soft--sides.v-top>
    .message__body.soft-half.message__appendix.gray-box
      %p.epsilon.push-half--bottom.quoted
        %strong{ itemprop: 'summary' }= comment.title
      %p{ itemprop: 'description' }
        = truncate(comment.content, length: truncate_length)
      %p.text--right.flush{title: 'Excellent !', itemprop: 'reviewRating', itemscope: true, itemtype: 'http://schema.org/Rating'}
        %i
          Par
          %span{ itemprop: 'reviewer' }= truncate(comment.author_name, length: 20).html_safe
          il y a
          %span{ itemprop: "dtreviewed", datetime: I18n.l(comment.created_at, format: :iso_date_8601), content: I18n.l(comment.created_at, format: :iso_date_8601) }= distance_of_time_in_words_to_now comment.created_at
          %i.fa.fa-time
            %meta{ itemprop: 'rating', content: "5" }
            %meta{ itemprop: 'url', content: structure_comment_url(comment) }
            %meta{ itemprop: 'name', content: comment.structure.name }

= gmaps( {markers: {data: @json_structure_addresses}, map_options: {maxZoom: 15, mapTypeControl: false}} )
.side-search-panel
  %h4.side-search-panel-header Affinez votre recherche :
  .search-panel-footer
    %button.btn{type: 'submit', data: {behavior: 'input-update', element: 'submit_search_form'}}
      %i.icon-search
      Actualiser
  .search-panel
    %h5.search-panel-header Type de cours
    .search-panel-content
      %ul.search-list
        %li
          = check_box_tag 'types[]', 'lesson', params[:types].include?('lesson'), id: "search_lesson_course_type", data: {behavior: 'input-update', element: "hidden_search_lesson_course_type"}
          = label_tag 'search_lesson_course_type', 'Cours'
        %li
          = check_box_tag 'types[]', 'training', params[:types].include?('training'), id: "search_training_course_type", data: {behavior: 'input-update', element: "hidden_search_training_course_type"}
          = label_tag 'search_training_course_type', 'Stage'
  .search-panel
    %h5.search-panel-header Public
    .search-panel-content
      %ul.search-list
        - @audiences.each_with_index do |audience, i|
          %li
            = check_box_tag 'audiences[]', audience.id, params[:audiences].include?(audience.id.to_s), id: "search_audience_#{i}", data: {behavior: 'input-update', element: "hidden_search_audience_#{i}"}
            = label_tag "search_audience_#{i}", t(audience.name)
  .search-panel
    %h5.search-panel-header Enfant ou adolescent
    .search-panel-content
      = label_tag 'Âge précis :'
      = number_field_tag 'age', params[:age], min: 0, max: 18, step: 1, placeholder: '12', data: {behavior: 'input-update', element: 'hidden_search_age'}
      ans
  .search-panel
    %h5.search-panel-header Niveaux
    .search-panel-content
      %ul.search-list
        - @levels.each_with_index do |level, i|
          %li
            = check_box_tag 'levels[]', level[:id], params[:levels].include?(level[:id].to_s), id: "search_level_#{level[:name]}", data: {behavior: 'input-update', element: "hidden_search_level_#{level[:name]}"}
            = label_tag "search_level_#{level[:name]}", t(level[:name])

  .search-panel
    %h5.search-panel-header Prix par cours
    .search-panel-content
      = label_tag 'search_price_range_min_price', 'De'
      = number_field_tag 'price_range[min]', params[:price_range][:min], min: 0, step: 1, placeholder: '35', class: 'timepicker-input', data: {behavior: 'input-update', element: 'hidden_search_price_range_min'}
      €
      = label_tag 'search_price_range_max_price', 'à'
      = number_field_tag 'price_range[max]', params[:price_range][:max], min: 0, step: 1, placeholder: '100', class: 'timepicker-input', data: {behavior: 'input-update', element: 'hidden_search_price_range_max'}
      €
  .search-panel
    %h5.search-panel-header Créneau horaire précis
    .search-panel-content
      = label_tag 'search_time_range_min_time', 'De'
      %input.timepicker-input{name: 'time_range[min]', value: params[:time_range][:min], placeholder: '19:30', data: {behavior: 'input-update', element: 'hidden_start_time'}}
      h
      = label_tag 'search_time_range_max_time', 'à'
      %input.timepicker-input{name: 'time_range[max]', value: params[:time_range][:max], placeholder: '20:30', data: {behavior: 'input-update', element: 'hidden_end_time'}}
      h
  .search-panel
    %h5.search-panel-header Arrondissement
    .search-panel-content
      %ul.search-list
        - (75001..75020).to_a.map(&:to_s).each do |zip_code|
          %li
            = check_box_tag 'zip_code[]', zip_code, params[:zip_codes].include?(zip_code), id: "search_arrondissement_#{zip_code}", data: {behavior: 'input-update', element: "hidden_search_arrondissement_#{zip_code}"}
            = label_tag "search_arrondissement_#{zip_code}", "Paris #{zip_code.to_s[3..4]}ème"

  .search-panel-footer
    %button.btn{type: 'submit', data: {behavior: 'input-update', element: 'submit_search_form'}}
      %i.icon-search
      Actualiser
- content_for :scripts do
  :javascript
    window.addEvent('domready', function() {
        Gmaps.map.callback = function() {
            for (var i = 0; i <  this.markers.length; ++i) {
                google.maps.event.addListener(Gmaps.map.markers[i].serviceObject, 'click', function() {
                    var course_element = $$('.course-element[data-structure_id=' + this.id + ']');
                    GLOBAL.Scroller.toElement(course_element[0]);

                    // Unselect courses if there already are that are selected
                    $$('.course-element').removeClass('selected');
                    course_element.addClass('selected');
                }.bind(Gmaps.map.markers[i]));
            }
        };
    });

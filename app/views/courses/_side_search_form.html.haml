.map-with-slider
  - if @courses.blank?
    - unless @city.blank?
      = gmaps( {markers: {data: [@city.to_gmap_json].to_json}, map_options: {maxZoom: 11, mapTypeControl: false}})
    - else
      = gmaps( {markers: {data: Gmaps4rails.geocode("#{params[:city]}, France").to_json}, map_options: {maxZoom: 11, mapTypeControl: false}})
  - else
    = gmaps( {markers: {data: @json_place_addresses}, map_options: {maxZoom: 15, mapTypeControl: false}})
  .grid--full.map-slider-container
    %label.grid__item.v-middle.three-twelfths.bold> Radius
    #radius-slider.grid__item.v-middle.slider.seven-twelfths>
      #radius-knob.slider--knob
        .slider--inner-knob
    %label.grid__item.v-middle.two-twelfths.text--right.bold
      %span#radius-label-value= params[:radius]
      km

.text--center{style: 'margin-top: 1em;'}
  %button.btn__primary.btn{type: 'submit', data: {behavior: 'input-update', element: 'submit_search_form'}}
    %i.icon-search
    Actualiser
.side-search-panel
  / %h4.side-search-panel-header Affinez votre recherche :
  / .search-panel-footer
  /   %button.btn__primary.btn{type: 'submit', data: {behavior: 'input-update', element: 'submit_search_form'}}
  /     %i.icon-search
  /     Actualiser

  //-------------------------------------------------------------------------------------------------------- Subject
  .search-panel
    %h5.search-panel-header.toggleable-header{data: {behavior: 'toggleable', el:'+ .search-panel-content'}}
      Dates
      %i.icon-caret-down
    .search-panel-content
      Du
      %input#start_date{type: 'text', class: 'datepicker-input', value: params[:start_date], name: 'start_date', data: {behavior: 'datepicker'}}
      au
      %input#end_date{type: 'text', class: 'datepicker-input', value: params[:end_date], name: 'end_date', data: {behavior: 'datepicker'}}


  //-------------------------------------------------------------------------------------------------------- Subject
  - cache do 'subjects'
    .search-panel
      %h5.search-panel-header.toggleable-header{data: {behavior: 'toggleable', el:'+ .search-panel-content'}}
        Disciplines
        - if @subject
          %i.icon-caret-down
        - else
          %i.icon-caret-left
      .search-panel-content{class: @subject ? '' : 'hide'}
        %ul.check-list
          %li= link_to t('all_subject'), courses_path(city: @city.name), class: 'subject-link'
          / ----------------- If the current subject is this one or has this one as a parent
          - Subject.roots.order(:name).each do |subject|
            - if params[:subject_id] == subject.slug || !subject.children.select{|d| d.slug == params[:subject_id]}.blank?
              %li= link_to subject.name, subject_courses_path(subject, city: @city.name), class: 'selected subject-link'
              %ul.check-list
                - subject.children.order('name ASC').each do |child_subject|
                  %li= link_to child_subject.name, subject_courses_path(child_subject, city: @city.name), class: (params[:subject_id] == child_subject.slug ? 'selected subject-link' : 'subject-link')
            - else
              %li= link_to subject.name, subject_courses_path(subject, city: @city.name), class: 'subject-link'

  //-------------------------------------------------------------------------------------------------------- Type de cours
  .search-panel
    %h5.search-panel-header.toggleable-header{data: {behavior: 'toggleable', el:'+ .search-panel-content'}}
      Type de cours
      - if params[:types].empty?
        %i.icon-caret-left
      - else
        %i.icon-caret-down
    .search-panel-content{class: (params[:types].empty?) ? 'hide' : ''}
      %ul.check-list
        %li
          = check_box_tag 'types[]', 'lesson', params[:types].include?('lesson'), id: "search_lesson_course_type", data: {behavior: 'input-update', element: "hidden_search_lesson_course_type"}
          = label_tag 'search_lesson_course_type', 'Cours'
          %ul.check-list{data: {behavior: 'depend-on-parent', element: "search_lesson_course_type"}}
            %li
              = check_box_tag 'price_specificities[]', 'has_unit_course_price', params[:price_specificities].include?('has_unit_course_price'), id: "price_specificity_unit_course", data: {behavior: 'input-update', element: "hidden_price_specificity_unit_course"}
              = label_tag 'price_specificity_unit_course', "À l'unité / au carnet"
            %li
              = check_box_tag 'price_specificities[]', 'has_package_price', params[:price_specificities].include?('has_package_price'), id: "price_specificity_package", data: {behavior: 'input-update', element: "hidden_price_specificity_package"}
              = label_tag 'price_specificity_package', 'Au forfait (annuel, trimestriel, etc.)'
            %li
              = check_box_tag 'price_specificities[]', 'has_trial_lesson', params[:price_specificities].include?('has_trial_lesson'), id: "price_specificity_test_course", data: {behavior: 'input-update', element: "hidden_price_specificity_test_course"}
              = label_tag 'price_specificity_test_course', "Cours d'essai possible"
        %li
          = check_box_tag 'types[]', 'workshop', params[:types].include?('workshop'), id: "search_workshop_course_type", data: {behavior: 'input-update', element: "hidden_search_workshop_course_type"}
          = label_tag 'search_workshop_course_type', 'Cours-atelier ponctuel'
        %li
          = check_box_tag 'types[]', 'training', params[:types].include?('training'), id: "search_training_course_type", data: {behavior: 'input-update', element: "hidden_search_training_course_type"}
          = label_tag 'search_training_course_type', 'Stage'

  //-------------------------------------------------------------------------------------------------------- Price
  .search-panel
    %h5.search-panel-header.toggleable-header{data: {behavior: 'toggleable', el:'+ .search-panel-content'}}
      Prix (par cours)
      - if params[:price_range][:min].blank? and params[:price_range][:max].blank?
        %i.icon-caret-left
      - else
        %i.icon-caret-down
    .search-panel-content{class: (params[:price_range][:min].blank? and params[:price_range][:max].blank?) ? 'hide' : ''}
      = label_tag 'search_price_range_min_price', 'De'
      = number_field_tag 'price_range[min]', params[:price_range][:min], min: 0, step: 1, placeholder: '35', class: 'timepicker-input', data: {behavior: 'input-update', element: 'hidden_search_price_range_min'}
      €
      = label_tag 'search_price_range_max_price', 'à'
      = number_field_tag 'price_range[max]', params[:price_range][:max], min: 0, step: 1, placeholder: '100', class: 'timepicker-input', data: {behavior: 'input-update', element: 'hidden_search_price_range_max'}
      €

  .search-panel
    %h5.search-panel-header.toggleable-header{data: {behavior: 'toggleable', el:'+ .search-panel-content'}}
      Niveaux
      - if params[:levels].empty?
        %i.icon-caret-left
      - else
        %i.icon-caret-down
    .search-panel-content{class: (params[:levels].empty?) ? 'hide' : ''}
      %ul.check-list
        - @levels.each_with_index do |level, i|
          %li
            = check_box_tag 'levels[]', level[:id], params[:levels].include?(level[:id].to_s), id: "search_level_#{level[:name]}", data: {behavior: 'input-update', element: "hidden_search_level_#{level[:name]}"}
            = label_tag "search_level_#{level[:name]}", t(level[:name])


  //-------------------------------------------------------------------------------------------------------- Audience
  .search-panel
    %h5.search-panel-header.toggleable-header{data: {behavior: 'toggleable', el:'+ .search-panel-content'}}
      Public
      - if params[:audiences].empty?
        %i.icon-caret-left
      - else
        %i.icon-caret-down
    .search-panel-content{class: (params[:audiences].empty?) ? 'hide' : ''}
      %ul.check-list
        - @audiences.each_with_index do |audience, i|
          %li
            = check_box_tag 'audiences[]', audience.id, params[:audiences].include?(audience.id.to_s), id: "search_audience_#{i}", data: {behavior: 'input-update', element: "hidden_search_audience_#{i}"}
            = label_tag "search_audience_#{i}", t(audience.name)

  .search-panel
    %h5.search-panel-header.toggleable-header{data: {behavior: 'toggleable', el:'+ .search-panel-content'}}
      Enfant ou adolescent
      - if params[:age][:min].blank? and params[:age][:max].blank?
        %i.icon-caret-left
      - else
        %i.icon-caret-down
    .search-panel-content{class: (params[:age][:min].blank? and params[:age][:max].blank?) ? 'hide' : ''}
      = label_tag 'for_min_age', 'De '
      = number_field_tag 'age[min]', params[:age][:min], min: 0, max: 18, step: 1, placeholder: '6', data: {behavior: 'input-update', element: 'hidden_search_age_min'}, id: 'for_min_age'
      = label_tag 'for_max_age', ' à '
      = number_field_tag 'age[max]', params[:age][:max], min: 0, max: 18, step: 1, placeholder: '10', data: {behavior: 'input-update', element: 'hidden_search_age_max'}, id: 'for_max_age'
      ans

  //-------------------------------------------------------------------------------------------------------- Time slot
  .search-panel
    %h5.search-panel-header.toggleable-header{data: {behavior: 'toggleable', el:'+ .search-panel-content'}}
      Créneau horaire précis
      - if params[:time_range][:min].blank? and params[:time_range][:max].blank?
        %i.icon-caret-left
      - else
        %i.icon-caret-down
    .search-panel-content{class: (params[:time_range][:min].blank? and params[:time_range][:max].blank?) ? 'hide' : ''}
      = label_tag 'search_time_range_min_time', 'De'
      %input.timepicker-input{name: 'time_range[min]', value: params[:time_range][:min], placeholder: '19:30', data: {behavior: 'input-update', element: 'hidden_start_time'}}
      h
      = label_tag 'search_time_range_max_time', 'à'
      %input.timepicker-input{name: 'time_range[max]', value: params[:time_range][:max], placeholder: '20:30', data: {behavior: 'input-update', element: 'hidden_end_time'}}
      h

//-------------------------------------------------------------------------------------------------------- Gmaps
- content_for :scripts do
  :javascript
    window.addEvent('domready', function() {
        Gmaps.map.callback = function() {
            for (var i = 0; i <  this.markers.length; ++i) {
                google.maps.event.addListener(Gmaps.map.markers[i].serviceObject, 'click', function() {
                    var course_element = $$('.course-element[data-place-id=' + this.id + ']');
                    GLOBAL.Scroller.toElement(course_element[0]);
                    // Unselect courses if there already are that are selected
                    $$('.course-element').removeClass('selected');
                    course_element.addClass('selected');
                }.bind(Gmaps.map.markers[i]));
            }
        };
        var radius_hidden_input = $('radius-hidden-input');
        var radius_label_value  = $('radius-label-value');
        new Slider('radius-slider', 'radius-knob', {
            range: [1, 50],
            step: 1,
            wheel: false,
            snap: true,
            initialStep: #{params[:radius]},
            onChange: function(pos){
                radius_hidden_input.set('value', pos);
                radius_label_value.set('text', pos);
            }
        });

    });

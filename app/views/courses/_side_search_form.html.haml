.map-with-slider.push-half--top.side-search-map
  - if @courses.empty?
    = gmaps( {markers: {data: [{lat: params[:lat], lng: params[:lng]}].to_json}, map_options: {maxZoom: 11, mapTypeControl: false}})
  - else
    = gmaps( {markers: {data: @json_locations_addresses}, map_options: {mapTypeControl: false}})
  .grid--full.map-slider-container
    %label.grid__item.v-middle.three-twelfths.bold> Rayon
    .seven-twelfths.grid__item.v-middle>
      .noUiSlider
    %label.grid__item.v-middle.two-twelfths.text--right.bold
      %span#radius-label-value= params[:radius]
      km

.text--center{style: 'margin-top: 1em;'}
  %button.btn--orange.btn{type: 'submit', data: {behavior: 'input-update', element: '#submit_search_form'}}
    %i.icon-search
    Actualiser
.side-search-panel
  //-------------------------------------------------------------------------------------------------------- Type de cours
  .search-panel
    %h5.search-panel-header.toggleable-header{onclick: "_gaq.push(['_trackEvent', 'Recherche latérale cours', 'click', 'Type de cours'])", data: {behavior: 'toggleable', el:'+ .search-panel-content'}}
      Type de cours
      - if params[:types].empty?
        %i.icon-caret-left
      - else
        %i.icon-caret-down
    .search-panel-content{class: (params[:types].empty?) ? 'hide' : ''}
      %ul.check-list
        %li
          = check_box_tag 'types[]', 'lesson', params[:types].include?('lesson'), id: "search_lesson_course_type", data: {behavior: 'input-update', element: "#hidden_search_lesson_course_type"}
          = label_tag 'search_lesson_course_type', 'Cours'
        %li
          = check_box_tag 'types[]', 'workshop', params[:types].include?('workshop'), id: "search_workshop_course_type", data: {behavior: 'input-update', element: "#hidden_search_workshop_course_type"}
          = label_tag 'search_workshop_course_type', 'Cours-atelier ponctuel'
        %li
          = check_box_tag 'types[]', 'training', params[:types].include?('training'), id: "search_training_course_type", data: {behavior: 'input-update', element: "#hidden_search_training_course_type"}
          = label_tag 'search_training_course_type', 'Stage'

  //-------------------------------------------------------------------------------------------------------- Price
  .search-panel
    %h5.search-panel-header.toggleable-header{onclick: "_gaq.push(['_trackEvent', 'Recherche latérale cours', 'click', 'Prix'])",data: {behavior: 'toggleable', el:'+ .search-panel-content'}}
      Prix (par séance)
      - if params[:price_range][:min].blank? and params[:price_range][:max].blank?
        %i.icon-caret-left
      - else
        %i.icon-caret-down
    .search-panel-content{class: (params[:price_range][:min].blank? and params[:price_range][:max].blank?) ? 'hide' : ''}
      = label_tag 'search_price_range_min_price', 'De'
      = number_field_tag 'price_range[min]', params[:price_range][:min], min: 0, step: 1, placeholder: '35', class: 'timepicker-input', data: {behavior: 'input-update', element: '#hidden_search_price_range_min'}
      €
      = label_tag 'search_price_range_max_price', 'à'
      = number_field_tag 'price_range[max]', params[:price_range][:max], min: 0, step: 1, placeholder: '100', class: 'timepicker-input', data: {behavior: 'input-update', element: '#hidden_search_price_range_max'}
      €
  .search-panel
    %h5.search-panel-header.toggleable-header{onclick: "_gaq.push(['_trackEvent', 'Recherche latérale cours', 'click', 'Dates'])", data: {behavior: 'toggleable', el:'+ .search-panel-content'}}
      Dates
      - if params[:start_date].present? or params[:end_date].present?
        %i.icon-caret-down
      - else
        %i.icon-caret-left
    .search-panel-content{class: (params[:start_date].present? or params[:end_date].present? ? '' : 'hide'), data: {behavior: 'date-range', 'start-date' => '#start-date', 'end-date' => '#end-date'}}
      Du
      %input#start-date{type: 'text', class: 'datepicker-input', value: params[:start_date], name: 'start_date'}
      au
      %input#end-date{type: 'text', class: 'datepicker-input', value: params[:end_date], name: 'end_date'}



  .search-panel
    %h5.search-panel-header.toggleable-header{onclick: "_gaq.push(['_trackEvent', 'Recherche latérale cours', 'click', 'Niveaux'])",data: {behavior: 'toggleable', el:'+ .search-panel-content'}}
      Niveaux
      - if params[:levels].empty?
        %i.icon-caret-left
      - else
        %i.icon-caret-down
    .search-panel-content{class: (params[:levels].empty?) ? 'hide' : ''}
      %ul.check-list
        - @levels.each_with_index do |level, i|
          %li
            = check_box_tag 'levels[]', level[:id], params[:levels].include?(level[:id].to_s), id: "search_level_#{level[:name]}", data: {behavior: 'input-update', element: "#hidden_search_level_#{level[:name]}"}
            = label_tag "search_level_#{level[:name]}", t(level[:name])


  //-------------------------------------------------------------------------------------------------------- Audience
  .search-panel
    %h5.search-panel-header.toggleable-header{onclick: "_gaq.push(['_trackEvent', 'Recherche latérale cours', 'click', 'Public'])", data: {behavior: 'toggleable', el:'+ .search-panel-content'}}
      Public
      - if params[:audiences].empty?
        %i.icon-caret-left
      - else
        %i.icon-caret-down
    .search-panel-content{class: (params[:audiences].empty?) ? 'hide' : ''}
      %ul.check-list
        - @audiences.each_with_index do |audience, i|
          %li
            = check_box_tag 'audiences[]', audience.id, params[:audiences].include?(audience.id.to_s), id: "search_audience_#{i}", data: {behavior: 'input-update', element: "#hidden_search_audience_#{i}"}
            = label_tag "search_audience_#{i}", t(audience.name)

  //-------------------------------------------------------------------------------------------------------- Subject
  .search-panel
    %h5.search-panel-header.toggleable-header{onclick: "_gaq.push(['_trackEvent', 'Recherche latérale cours', 'click', 'Disciplines'])",data: {behavior: 'toggleable', el:'+ .search-panel-content'}}
      Disciplines
      - if @subject
        %i.icon-caret-down
      - else
        %i.icon-caret-left
    .search-panel-content{class: @subject ? '' : 'hide'}
      %ul.check-list
        %li= link_to t('all_subject'), courses_path(address_name: params[:address_name], lat: params[:lat], lng: params[:lng]), class: 'subject-link'
        / ----------------- If the current subject is this one or has this one as a parent
        - # Subject.roots.order('position ASC, name ASC').each do |subject|
        - Subject.roots.order(:name).each do |subject|
          - if params[:subject_id] == subject.slug || !subject.children.select{|d| d.slug == params[:subject_id]}.blank?
            %li= link_to subject.name, subject_courses_path(subject, address_name: params[:address_name], lat: params[:lat], lng: params[:lng]), class: 'selected subject-link'
            %ul.check-list
              - subject.children.order('name ASC').each do |child_subject|
                %li= link_to child_subject.name, subject_courses_path(child_subject, address_name: params[:address_name], lat: params[:lat], lng: params[:lng]), class: (params[:subject_id] == child_subject.slug ? 'selected subject-link' : 'subject-link')
          - else
            %li= link_to subject.name, subject_courses_path(subject, address_name: params[:address_name], lat: params[:lat], lng: params[:lng]), class: 'subject-link'

  / .search-panel
  /   %h5.search-panel-header.toggleable-header{data: {behavior: 'toggleable', el:'+ .search-panel-content'}}
  /     Enfant ou adolescent
  /     - if params[:age][:min].blank? and params[:age][:max].blank?
  /       %i.icon-caret-left
  /     - else
  /       %i.icon-caret-down
  /   .search-panel-content{class: (params[:age][:min].blank? and params[:age][:max].blank?) ? 'hide' : ''}
  /     = label_tag 'for_min_age', 'De '
  /     = number_field_tag 'age[min]', params[:age][:min], min: 0, max: 18, step: 1, placeholder: '6', data: {behavior: 'input-update', element: '#hidden_search_age_min'}, id: 'for_min_age'
  /     = label_tag 'for_max_age', ' à '
  /     = number_field_tag 'age[max]', params[:age][:max], min: 0, max: 18, step: 1, placeholder: '10', data: {behavior: 'input-update', element: '#hidden_search_age_max'}, id: 'for_max_age'
  /     ans

  //-------------------------------------------------------------------------------------------------------- Time slot
  .search-panel
    %h5.search-panel-header.toggleable-header{data: {behavior: 'toggleable', el:'+ .search-panel-content'}}
      Créneau horaire précis
      - if params[:time_range][:min].blank? and params[:time_range][:max].blank?
        %i.icon-caret-left
      - else
        %i.icon-caret-down
    .search-panel-content{class: (params[:time_range][:min].blank? and params[:time_range][:max].blank?) ? 'hide' : ''}
      = label_tag 'search_time_range_min_time', 'De'
      %input.timepicker-input{name: 'time_range[min]', value: params[:time_range][:min], placeholder: '19:30', data: {behavior: 'input-update', element: '#hidden_start_time'}}
      h
      = label_tag 'search_time_range_max_time', 'à'
      %input.timepicker-input{name: 'time_range[max]', value: params[:time_range][:max], placeholder: '20:30', data: {behavior: 'input-update', element: '#hidden_end_time'}}
      h

//-------------------------------------------------------------------------------------------------------- Gmaps
- content_for :scripts do
  :javascript
    $(function() {
        Gmaps.map.callback = function() {
            for (var i = 0; i <  this.markers.length; ++i) {
                google.maps.event.addListener(Gmaps.map.markers[i].serviceObject, 'click', function() {
                    var course_element = $('.course-element[data-location-ids~=' + this.id + ']');
                    $(document.body).scrollTo(course_element[0], {duration: 400});
                    // Unselect courses if there already are that are selected
                    $('.course-element').removeClass('selected');
                    setTimeout(function(){
                        course_element.addClass('selected');
                    }, 100);
                }.bind(Gmaps.map.markers[i]));
                google.maps.event.addListener(Gmaps.map.markers[i].serviceObject, 'mouseover', function(event) {
                    var course_element = $('.course-element[data-location-ids~=' + this.id + ']');
                    // Unselect courses if there already are that are selected
                    course_element.addClass('selected');
                }.bind(Gmaps.map.markers[i]));
                google.maps.event.addListener(Gmaps.map.markers[i].serviceObject, 'mouseout', function(event) {
                    var course_element = $('.course-element[data-location-ids~=' + this.id + ']');
                    course_element.removeClass('selected');
                }.bind(Gmaps.map.markers[i]));
            }
        };
        $('.course-element').hover(function(event) {
            var location_ids = $(this).data('location-ids').toString().split(' ');
            $.each(Gmaps.map.markers, function(index, marker){
                if (location_ids.indexOf(marker.id.toString()) !== -1) {
                    var service_object = marker.serviceObject;
                    service_object.setContent($(service_object.getContent()).addClass('active')[0].outerHTML);
                }
            });
        }, function() {
            var location_ids = $(this).data('location-ids').toString().split(' ');
            $.each(Gmaps.map.markers, function(index, marker){
                if (location_ids.indexOf(marker.id.toString()) !== -1) {
                    var service_object = marker.serviceObject;
                    service_object.setContent($(service_object.getContent()).removeClass('active')[0].outerHTML);
                }
            });
        });
        var radius_label_value  = $('#radius-label-value');
        var radius_hidden_input = $('#radius-hidden-input');
        $('.noUiSlider').noUiSlider({
            range: [1, 10]
           ,start: #{params[:radius] || 5}
           ,step: 1
           ,margin: 0
           ,handles: 1
           ,slide: function(){
              var value = $(this).val();
              radius_label_value.text(value);
              radius_hidden_input.val(value);
              $('#header-search').submit();
           }
        });
        $('#start_date').change(function() {
            $('#hidden_start_date').val(this.value);
        });
        $('#end_date').change(function() {
            $('#hidden_end_date').val(this.value);
        });
    });

= content_for :head do
  - if @subject
    %link{rel: 'canonical', href: subject_courses_url(@subject)}
  - else
    %link{rel: 'canonical', href: courses_url}

= content_for :title do
  = "#{(params[:subject_id] ? "Cours de #{@subject.name.downcase}" : 'Cours')} #{(params[:name].present? ? "correspondant à : « #{params[:name]} »" : (params[:city].present? ? "à #{params[:city]}" : 'à Paris'))}"

= render 'search_form'
.grid.stickem-container.relative
  %section.grid__item.four-tenths.visuallyhidden--palm.visuallyhidden--lap.stickem.absolute>
    = render 'side_search_form'
  %section.grid__item.six-tenths.lap--one-whole.palm--one-whole.push--four-tenths.course-list>
    %ol.nav.breadcrumb.epsilon.push-half--top.push-half--bottom{itemprop: 'breadcrumb'}
      %li= link_to 'Tous les cours', courses_path(name: params[:name], address_name: params[:address_name], lat: params[:lat], lng: params[:lng])
      - if @subject
        - if @subject.parent
          %li= link_to @subject.parent.name, subject_courses_path(@subject.parent, name: params[:name], address_name: params[:address_name], lat: params[:lat], lng: params[:lng])
        %li= link_to @subject.name, subject_courses_path(@subject, name: params[:name], address_name: params[:address_name], lat: params[:lat], lng: params[:lng])
      - if params[:name]
        %li= params[:name]
    %h1.text--center.delta.flush.lbl.lbl--blue.visuallyhidden
      - if params[:subject_id]
        Cours de #{@subject.name.downcase}
      - else
        Cours
      - if params[:name].present?
        correspondant à : « #{params[:name]} »
      - elsif params[:city]
        = "à #{params[:city]}"
      - else
        à Paris


    %ul.tabs.push--top
      %li
        - if @subject
          = link_to 'Par établissement', subject_structures_path(@subject, name: params[:name], address_name: params[:address_name], lat: params[:lat], lng: params[:lng]), class: 'tab-el', onclick: "_gaq.push(['_trackEvent', 'Chercher par établissement', 'click'])"
        - else
          = link_to 'Par établissement', structures_path(name: params[:name], address_name: params[:address_name], lat: params[:lat], lng: params[:lng]), class: 'tab-el', onclick: "_gaq.push(['_trackEvent', 'Chercher par établissement', 'click'])"
      %li.active
        %a Par cours

    - if @courses.empty?
      = render 'no_results'
    - else
      .flexbox.page-entries-wrapper
        .flexbox__item.palm--one-whole
          %p.flush--bottom= page_entries_info @courses, entry_name: Course.model_name.human.downcase
          .spoken-form
            %label Trier par :
            %a.filter-select{href: '#', class: (params[:sort] == 'relevancy' ? 'bold' : ''), data: {value: 'relevancy'}} Pertinence
            \/
            %a.filter-select{href: '#', class: (params[:sort] == 'rating_desc' ? 'bold' : ''), data: {value: 'rating_desc'}} Popularité
            \/
            %a.filter-select{href: '#', class: (params[:sort] == 'price_asc' ? 'bold' : ''), data: {value: 'price_asc'}} Prix
        .flexbox__item.visuallyhidden--palm
          .text--right= paginate @courses, window: 1, outer_window: 1
      %ul.block-list.course-list
        = render partial: 'courses/course', :collection => @courses

      %footer.g.one-whole
        = paginate @courses, window: 2, outer_window: 1

= content_for :scripts do
  :javascript
      $(function() {
          $('body').stickem();
          $('.filter-select').click(function() {
              $('#hidden-sort-input').val(this.dataset.value);
              $('#submit_search_form').click();
          });
          $('[data-type=course-element]').each(function(index, el) {
              $(this).click(function(event) {
                  // Change url only if user doesn't click on link
                  if (event.target.nodeName !== 'A') {
                      if (event.metaKey || event.ctrlKey) {
                          window.open($(this).data('url'));
                      } else {
                          window.location = $(this).data('url');
                      }
                      return false;
                  }
              });
          });
          google.maps.event.addDomListener(window, 'load', function() {
              Gmaps.map.addMarkers([{
                id: -1,
                lat: #{params[:lat]},
                lng: #{params[:lng]}
              }]);
          });
      });

= side_menu_currently_at 'dashboard'

.panel
  = render partial: 'pro/shared/dashboard_tabs', locals: { current: 'admins' }
  .panel__body.soft
    %h3 Liste des admins

    .push-half--bottom
      %input.input--large.one-whole#search-input{ type: 'text', placeholder: 'Cherchez un établissement' }

    .push-half--bottom= paginate @admins, window: 2, outer_window: 1

    .input
      %label.v-middle.push-half--right Trier par
      %select.v-middle#sorting
        %option{value: 'created_at_desc', selected: params[:sort] == 'created_at_desc'} Date de création
        %option{value: 'comments_count_desc', selected: params[:sort] == 'comments_count_desc'} Nombre d'avis

    = link_to 'Voir les structures sans admins', pro_structures_path
    |
    = link_to 'Voir les admins non actifs', pro_admins_path(sort: 'not_confirmed')
    %table.table--striped.table--data#dataTable
      %thead
        %tr
          %th
            %span Nom
          %th
            %span Établissements
          %th
            %span Disciplines
          %th
            %span Avis
          %th
            %span Date d'inscription
          %th.hidden
            %span Dernière date de connexion
          %th
      %tbody
        - @admins.each do |admin|
          %tr
            %td
              = link_to admin.email, edit_pro_structure_admin_path(admin.structure, admin)
            %td
              - if admin.structure
                = link_to dashboard_pro_structure_path(admin.structure) do
                  - if admin.structure.logo?
                    = image_tag admin.structure.logo.url(:thumb), height: 15
                  = admin.structure.name
            %td
              - if admin.structure
                = join_parent_subjects_text admin.structure
            %td.nowrap{data: {value: (admin.structure ? admin.structure.rating : 0)}}
              - if admin.structure
                = admin.structure.comments_count

            %td{data: {value: admin.created_at}}
              = l(admin.created_at, format: :date_short)
            %td.hidden{data: {value: admin.current_sign_in_at}}
              = l(admin.current_sign_in_at) if admin.current_sign_in_at
            %td.text--right.nowrap
              - if admin.confirmed?
                .switch-button.on
                  Actif
              - else
                = link_to 'Inactif', confirm_pro_admin_path(admin), class: 'switch-button off', method: :patch
              &nbsp;
              = link_to edit_pro_admin_path(admin), title: 'Modifier', class: 'btn btn--warning' do
                %i.fa.fa-pencil
              &nbsp;
              - if admin.structure
                = link_to pro_structure_path(admin.structure), method: :delete, title: 'Supprimer', class: 'btn btn--red', data: {confirm: 'Êtes-vous sur de supprimer cet admin et TOUS ses cours ?'} do
                  %i.fa.fa-trash-o
    .push-half--bottom= paginate @admins, window: 2, outer_window: 1
    %script#structure-item-template{:type => 'text/x-handlebars-template'}
      %div{style: 'font-size: 13px;'}
        {{name}}
        <a href="mailto:{{email}}">({{email}})</a>
        %br
        %strong {{structure.name}}
        ({{structure.comments_count}} avis)

= content_for :scripts do
  :javascript
    $(function() {
        $('#dataTable').tablesorter();
        // Admin search
        var template = Handlebars.compile($('#structure-item-template').html());
        var engine   = new Bloodhound({
          datumTokenizer: function(d) { return Bloodhound.tokenizers.whitespace(d.num); },
          queryTokenizer: Bloodhound.tokenizers.whitespace,
          remote: Routes.pro_admins_path({format: 'json'}) + '?name=%QUERY'
        });
        engine.initialize();
        $('#search-input').typeahead({
            highlight : true
          }, [
          {
            templates: {
                suggestion: template
            },
            limit: 10,
            source: engine.ttAdapter()
          }
        ]);
        $('#search-input').on('typeahead:selected', function(event, data){
            window.open('/etablissements/' + data.structure.slug)
        });
        $('#sorting').change(function(){
            var new_location = "#{pro_admins_path}" + '?page=';
            new_location += '#{params[:page] || 1}';
            new_location += '&sort=' + this.value;
            window.location = new_location;
        });
    })

= simple_form_for [:pro, @article] do |f|
  .text--center.push--bottom{ data: { behavior: 'image-input' } }
    .progress.hidden.push-half--bottom{ data: { progress: true } }
      .bar
    - if @article.cover_image.present?
      .push-half--bottom.bordered{ style: "height: 200px; width: 200px; display: inline-block; line-height: 196px;" }<
        = image_tag @article.cover_image.url(:small), class: 'v-middle inline-block', style: 'max-height: 100%;'
    - else
      .push-half--bottom.bordered{style: "height: 200px; width: 200px; display: inline-block; line-height: 196px;"}
        %img.v-middle.inline-block{style: 'max-height: 100%;'}

    - if @article.cover_image?
      .inline-block.v-top>
        = link_to 'javascript:void(0)', class: 'btn btn--blue btn--small push-half--bottom', data: { trigger: true } do
          %i.fa.fa-picture-o
          Modifier
    - else
      = link_to 'javascript:void(0)', class: 'btn btn--blue btn--small', data: { trigger: true } do
        %i.fa.fa-picture-o
        Choisir l'image de l'article
    .visuallyhidden= f.input :cover_image, label: false, input_html: { id: 'logo-input' }

  = f.input :published, input_html: { class: 'input--large one-whole' }, wrapper_html: { class: 'flush' }, label: 'Article publié', label_html: { class: 'label--large' }

  .input.input-daterange.input-group{ data: { behavior: 'datepicker' } }
    %label.label--large.required.control-label{ for: 'published_date' } Date de publication
    %input.input-sm.input--large.datepicker-input#published_date{ type: 'text', value: (@article.published_at.nil? ? '' : l(@article.published_at.to_date)), name: 'blog_article[published_at]' }

  = f.input :category_id, as: :select, collection: Blog::Category.all, input_html: { class: 'input--large' }, label: 'Catégorie', label_html: { class: 'label--large' }
  = f.input :tag_list, input_html: { class: 'input--large one-whole' }, label: false
  = f.input :page_title, label: false, input_html: { class: 'input--large one-whole' }
  = f.input :title, label: false, input_html: { class: 'input--large one-whole' }
  %p.flush.epsilon Environ 155 caractères
  = f.input :page_description, input_html: { class: 'input--large one-whole', data: { behavior: 'text-counter', characters: true, 'good-words-nb' => 155, 'bad-text' => 'Allez Camille, tu y es presque !', 'good-text' => 'Wouhou!!! Well done!', 'average-words-nb' => 'Almost there!' } }, label: false
  = f.input :description, label: false, input_html: { class: 'input--large one-whole' }
  = f.association :subjects, as: :select, collection: Subject.all, input_html: { class: 'input--large one-whole', id: 'parent-subjects', data: { behavior: 'chosen', placeholder: 'Disciplines associée' }, multiple: true }, label: false, label_method: lambda{|subj| subj.name }, wrapper_html: { class: 'flush--bottom' }, label_html: { class: 'label--large' }

  = f.input :content, label: false, input_html: { class: 'one-whole' }

  = f.submit 'Enregistrer', class: 'btn btn--green btn--full', data: { disable_with: 'Enregistrement en cours...' }

= content_for :scripts do
  = javascript_include_tag '//cdn.ckeditor.com/4.4.4/standard/ckeditor.js'

  :javascript
      $(document).ready(function() {
          CKEDITOR.replace('blog_article[content]', {
              customConfig: '#{asset_path('ckeditor/config.js')}'
          });
      });
      // Prevent the backspace key from navigating back.
      $(document).unbind('keydown').bind('keydown', function (event) {
          var doPrevent = false;
          if (event.keyCode === 8) {
              var d = event.srcElement || event.target;
              if ((d.tagName.toUpperCase() === 'INPUT' && (d.type.toUpperCase() === 'TEXT' || d.type.toUpperCase() === 'PASSWORD' || d.type.toUpperCase() === 'FILE' || d.type.toUpperCase() === 'EMAIL' ))
                   || d.tagName.toUpperCase() === 'TEXTAREA') {
                  doPrevent = d.readOnly || d.disabled;
              }
              else {
                  doPrevent = true;
              }
          }

          if (doPrevent) {
              event.preventDefault();
          }
      });

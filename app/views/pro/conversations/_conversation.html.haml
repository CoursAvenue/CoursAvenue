- last_message = conversation.messages.last

- recipients = conversation.recipients.reject{|recipient| recipient == @admin }
- participation_request = conversation_participation_request(conversation)
.bordered--top.push-half--top.soft-half--top
  - if participation_request and participation_request.pending?
    .grid--full.red-box.soft-half--sides.very-soft.rounded--none.border-none.white
      .grid__item.v-middle.three-twelfths>
        %strong.epsilon En attente de réponse
      .grid__item.v-middle.nine-twelfths.text--right>
        = succeed ' ' do
          = link_to 'Répondre', pro_structure_conversation_path(@structure, conversation), class: 'btn btn--small'
        = succeed ' ' do
          .inline-block.drop-down__wrapper{ data: { behavior: 'drop-down', el: '> .drop-down__el', position: 'left' } }
            %a.btn.btn--small
              %i.fa.fa-flag
              Signaler
            %ul.drop-down__el.text--left
              %li.nowrap
                = link_to 'Fausse demande', flag_pro_structure_conversation_path(@structure, conversation, flag: 'Fausse demande'), method: :patch, class: 'muted-link'
              %li.nowrap
                = link_to 'Contenu inapproprié / offensant', flag_pro_structure_conversation_path(@structure, conversation, flag: 'Contenu inapproprié / offensant'), method: :patch, class: 'muted-link'
              %li.nowrap
                = link_to 'Autres', flag_pro_structure_conversation_path(@structure, conversation, flag: 'Autres'), method: :patch, class: 'muted-link'

  = link_to pro_structure_conversation_path(@structure, conversation), class: "muted-link block grid--full #{(participation_request and participation_request.pending? ? 'bordered--red bordered-none--top bordered--larger' : '')}" do
    .grid__item.v-top.v-middle{ style: 'width: 30%' }>
      .grid--full
        .grid__item.one-quarter.v-middle>
          - if recipients.first
            = image_tag recipients.first.avatar_url(:thumb), class: 'block bordered rounded--circle'
        .grid__item.three-quarters.soft-half--left.v-middle>
          %p.flush
            = truncate((recipients.first.name || recipients.first.email), length: 18)
            - if recipients.length > 1
              %span.nowrap.milli{ title: recipients.map(&:name).join(', '), data: { behavior: 'tooltip' } }
                et #{pluralize(recipients.length - 1, 'autre')}
              %br
            %span.milli= "le #{l(last_message.created_at.to_date, format: :short)}"
            - if participation_request
              = participation_request_state_html(participation_request)
    .grid__item.soft-half--left.v-middle{ style: 'width: 65%' }>
      %p.flush
        %strong
          = conversation.subject
          - if conversation_extra_infos(conversation).present?
            = "(#{conversation_extra_infos(conversation).map{ |extra_info| t("#{extra_info.name}_small") }.join(', ')})"

        = "(#{pluralize conversation.messages.count, 'message'})"
        %br
        = truncate(last_message.body, length: 80)
    .grid__item.soft-half--left.text--center.v-middle{ style: 'width: 5%' }>
      = conversation_label conversation

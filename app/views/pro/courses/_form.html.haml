- if @course.new_record?
  - url = pro_structure_courses_path(@structure)
- else
  - url = pro_course_path(@course)

= simple_form_for [:pro, @structure, @course], url: url, as: :course do |f|
  = f.error_notification
  .form-white-box
    = f.input :name, label: t('.name'), placeholder: 'Zumba, jardin musical, Vins et Fromages, etc'
    = f.association :subjects , as: :select, collection: Subject.roots.map(&:children).flatten, input_html: {style: 'width: 300px;', 'data-behavior' => 'chosen', multiple: true}, label: t('.subjects'), selected: @course.subject_ids, label_method: lambda{|subj| "#{subj.parent.name} - #{subj.name}" }
    - if @course.new_record?
      .input.grid--full
        .grid__item.width-auto.v-top>
          .control-label *Type de cours
        .grid__item.width-auto>
          .radio.grid--full
            %input#type_course_lesson{type: 'radio', name: 'course[type]', value: 'Course::Lesson', checked: @course.is_lesson?}>
            %label{for: 'type_course_lesson'} Cours récurrent
          .radio.grid--full
            %input#type_course_workshop{type: 'radio', name: 'course[type]', value: 'Course::Workshop', checked: @course.is_workshop?}
            %label{for: 'type_course_workshop'} Cours-atelier
          .radio.grid--full
            %input#type_course_training{type: 'radio', name: 'course[type]', value: 'Course::Training', checked: @course.is_training?}
            %label{for: 'type_course_training'} Stage
        - if @course.errors.messages[:type]
          %p.alert.alert-error= @course.errors.messages[:type].first

  %h5.form-header-group.flush--bottom
    %i.icon-picture
    Image
  .form-white-box
    - unless @course.new_record? || !@course.image.present?
      .input.grid
        .grid__item.width-auto>= f.label :image
        .grid__item.width-auto>= image_tag @course.image.url(:thumb), height: 200
      = f.input :delete_image, as: :boolean, :label => "Supprimer l'image"
    .input
      - if @course.new_record?
        .control-label Image du cours
      - else
        .control-label Changer l'image
      = f.input :image, label: false

    - if current_pro_admin.super_admin? and @course.is_promoted
      = f.input :homepage_image, label: 'Image de la home'

  #recurrency{style: @course.is_lesson? ? '' : 'display: none;'}
    %h5.form-header-group.flush--bottom.flush--top
      %i.icon-time
      Récurrence
    .white-box.islet.flush--bottom{style: 'max-width: 800px; margin-left: 250px; margin-top: 1em;'}
      .input.depend-on-reccurent-course>
        %label.control-label{for: 'course_start_date'} Date du premier et dernier cours
        = f.input :start_date, as: :string, label: false, wrapper_html: {class: 'flush--ends'}, input_html: {style: 'margin-right: 5px', class: 'datepicker-input', value: (@course.start_date.present? ? l(@course.start_date) : l(Date.today)), 'data-behavior' => 'datepicker'}
        \-&nbsp;
        = f.input :end_date, as: :string, label: false, wrapper_html: {class: 'flush--ends'}, input_html: {class: 'datepicker-input', value: (@course.end_date.present? ? l(@course.end_date) : l(Date.today + 1.year)), 'data-behavior' => 'datepicker'}
      = f.input :frequency, as: :select, collection: Course::COURSE_FREQUENCIES, label_method: lambda {|course_frequency| t(course_frequency)}, default: Course::COURSE_FREQUENCIES.first, label: t('.frequency'), wrapper_html: {class: 'depend-on-reccurent-course'}


  %h5.form-header-group.flush--bottom
    %i.lbc-icon-info i
    Infos
  .form-white-box
    .input.grid--full
      = f.label :is_individual, class: 'control-label v-top' do
        %abbr *
        = t('.individual_course')
      %div
        .radio
          %input#course_is_individual{type: 'radio', name: 'course[is_individual]', value: 'true', checked: @course.is_individual?}
          %label{for: 'course_is_individual'}> Individuel
        .radio
          %input#course_is_collectif{type: 'radio', name: 'course[is_individual]', value: 'false', checked: !@course.is_individual?}
          %label{for: 'course_is_collectif'}> Collectif -&nbsp;
          %label Nombre moyen de participants &nbsp;
          = f.input :nb_participants, label: false, input_html: {type: :number, placeholder: 12, style: 'width: 5em;'}, wrapper_html: {class: 'flush--ends inline'}
    = f.association :place , as: :select, collection: @structure.places, include_blank: false
    = f.association :levels   , as: :select, collection: Level.all, input_html: {style: 'width: 300px;', multiple: true, 'data-behavior' => 'chosen'}, label_method: lambda {|level| t(level.name)}, label: t('.levels'), selected: @course.level_ids.any? ? @course.level_ids : [Level.all_levels.id]

    .input
      = f.label :audiences, "* #{t('.audiences')}", class: 'control-label helper-label', 'data-behavior' => 'popover', 'data-content' => 'Enfant : de 0 à 12 ans. Ado : de 12 à 18 ans. Adulte : > 18 ans. Senior : > 60 ans.'
      = f.association :audiences, as: :select, collection: Audience.all, input_html: {style: 'width: 300px;', multiple: true, 'data-behavior' => 'chosen'}, label_method: lambda {|audience| t(audience.name)}, label: false, selected: @course.audience_ids.any? ? @course.audience_ids : [Audience.adult.id]

  / = f.input :is_for_handicaped, label: t('.is_for_handicaped'), as: :boolean

  %h5.form-header-group.flush--bottom Description
  .form-white-box
    .grid--full.input
      .textarea-with-info
        .grid--full
          .one-half.grid__item>
            = f.input :description, as: :text, placeholder: 'Expliquez en quoi consiste le cours / stage, de manière à ce que l’élève comprenne bien ce qu’il y apprendra, pour éviter toute confusion. Plus de détails vous donnez, mieux c’est !', label: false, input_html: {class: 'textarea-description', data: { behavior: 'text-counter', 'average-words-nb' => 20, 'good-words-nb' => 70, 'bad-text' => 'Votre description doit comporter au moins 20 mots. Nos Partenaires qui ont le plus de succès ont plus de 100 mots', 'average-text' => 'Encore quelques mots et vous aurez une superbe description !', 'good-text' => 'Superbe description !'}, value: @course.description_for_input}, wrapper_html: {class: 'flush--top'}
          .one-half.grid__item>
            %p.alert--info.flush--top Quel est ce cours ? Quelles en sont les origines ? Qu’y trouve-t-on ?
            %p.alert--info Comment se déroule le cours ? En plusieurs thèmes ?
            %p.alert--info Quelles sont les méthodes pratiquées ?


  .form-actions
    = f.submit (@course.new_record? ? 'Créer le cours' : 'Mettre à jour le cours'), class: 'btn btn__success'
= content_for :scripts do
  :javascript
    document.addEvent('domready', function() {
        $$('[data-behavior=chosen]').each(function(select) {
            new Chosen(select);
        });
        $$('[name=course[type]]').addEvent('change', function() {
            if (this.get('value') === 'Course::Lesson') {
                $('recurrency').reveal();
            } else {
                $('recurrency').dissolve();
            }
        });
    });

- if @course.new_record?
  - url = pro_structure_courses_path(@structure)
- else
  - url = pro_course_path(@course)

= simple_form_for [:pro, @structure, @course], url: url, as: :course, html: {id: 'course-form'} do |f|
  = f.error_notification
  - unless @course.new_record?
    %h5.form-header-group.flush--bottom
      %i.icon-picture
      Image
    .form-white-box{data: {behavior: 'image-input' }}
      #image-progress.progress.hidden{data: {progress: true }}
        .bar
      .text--center
        - if @course.image.present?
          = image_tag @course.image.url(:normal), height: 200, id: 'logo-image'
          %br
          %a.red#delete-image{href: 'javascript:void(0)'} Supprimer l'image
          .visuallyhidden= f.input :delete_image, label: false, as: :boolean
        - else
          %img.center-block#logo-image{style: 'max-height: 200px'}
      .input
        = f.label :image
        = link_to 'javascript:void(0)', class: 'btn btn--blue btn--small', data: {trigger: true} do
          %i.icon-picture
          Choisir mon image
        = f.input :image, label: false, wrapper_html: {style: 'position:absolute; left:-1000px;'}, input_html: {id: 'image-input'}
      %p.field-form-info.blue= t('structures.accepted_image_formats')
  %h5.form-header-group.flush--bottom
    %i.lbc-icon-info i
    Information générales du cours
  .form-white-box
    = f.input :name, label: t('.name'), placeholder: 'Ex : Danse orientale, Dégustation de vins & fromages, etc.'
    .input
      = f.label :subjects
      = f.association :subjects , as: :select, collection: @structure.subjects.little_children, input_html: {style: 'width: 300px;', data: {behavior: 'chosen', placeholder: 'Sélectionnez une ou plusieurs disciplines'}, multiple: true}, label: t('.subjects'), selected: @course.subject_ids, label_method: lambda{|subj| subj.name }, wrapper_html: {class: 'flush'}, label: false
      .inline-block
        = link_to edit_pro_structure_path(@structure, from_path: request.path) do
          %i.icon-plus
          Ajouter des disciplines à mon profil
    %p.field-form-info.blue.flush Si vous désirez choisir d'autres disciplines, ajoutez-les à votre profil en cliquant sur le lien ci-dessus.

    .input.grid--full
      = f.label :is_individual, class: 'control-label v-top' do
        %abbr *
        = t('.individual_course')
      %div
        .radio
          %input#course_is_individual{type: 'radio', name: 'course[is_individual]', value: 'true', checked: @course.is_individual?}
          %label{for: 'course_is_individual'}> Individuel / Particulier
        .radio
          %input#course_is_collectif{type: 'radio', name: 'course[is_individual]', value: 'false', checked: !@course.is_individual?}
          %label{for: 'course_is_collectif'}> Collectif -&nbsp;
          %label Nombre moyen de participants &nbsp;
          = f.input :nb_participants, label: false, input_html: {type: :number, placeholder: 12, style: 'max-width: 5em;', class: 'soft-half--left'}, wrapper_html: {class: 'flush--ends inline'}

    .input
      .control-label.v-top *Type de cours
      %div
        .radio
          %input#type_course_lesson{type: 'radio', name: 'course[type]', value: 'Course::Lesson', checked: @course.type == 'Course::Lesson'}>
          %label{for: 'type_course_lesson'} Cours régulier
        .radio
          %input#type_course_workshop{type: 'radio', name: 'course[type]', value: 'Course::Workshop', checked: @course.type == 'Course::Workshop'}>
          %label{for: 'type_course_workshop'} Cours-atelier (ponctuel)
        .radio
          %input#type_course_training{type: 'radio', name: 'course[type]', value: 'Course::Training', checked: @course.type == 'Course::Training'}>
          %label{for: 'type_course_training'} Stage
      - if @course.errors.messages[:type]
        %p.alert.alert-error= @course.errors.messages[:type].first

  #recurrency{style: @course.is_lesson? ? '' : 'display: none;'}
    %h5.form-header-group.flush--bottom.flush--top
      %i.icon-time
      Récurrence
    .form-white-box
      .input.depend-on-reccurent-course{data: {behavior: 'date-range', 'start-date' => '#course_start_date', 'end-date' => '#course_end_date'}}>
        %label.control-label{for: 'course_start_date'} Date du premier et dernier cours
        = f.input :start_date, as: :string, label: false, wrapper_html: {class: 'flush--ends'}, input_html: {style: 'margin-right: 5px', class: 'datepicker-input', value: (@course.start_date.present? ? l(@course.start_date) : l(Date.today)), data: {behavior: 'datepicker'}}
        \-&nbsp;
        = f.input :end_date, as: :string, label: false, wrapper_html: {class: 'flush--ends'}, input_html: {class: 'datepicker-input', value: (@course.end_date.present? ? l(@course.end_date) : l(Date.today + 1.year)), 'data-behavior' => 'datepicker'}
      = f.input :frequency, as: :select, collection: Course::COURSE_FREQUENCIES, label_method: lambda {|course_frequency| t(course_frequency)}, default: Course::COURSE_FREQUENCIES.first, label: t('.frequency'), wrapper_html: {class: 'depend-on-reccurent-course'}
      .input.flush
        .control-label
          %b Autres infos
      .input.flush
        .control-label &nbsp;
        = f.input :can_be_joined_during_year, label: false, wrapper_html: {class: 'flush'}
        %label{for: 'course_can_be_joined_during_year'}= Course.human_attribute_name :can_be_joined_during_year
      .input.flush
        .control-label &nbsp;
        = f.input :no_class_during_holidays, label: false, wrapper_html: {class: 'flush'}
        %label{for: 'course_no_class_during_holidays'}= Course.human_attribute_name :no_class_during_holidays

  %h5.form-header-group.flush--bottom.push--top.soft--top Description
  %div.relative
    = image_tag 'texts/course-description.png', height: 85, style: 'position: absolute; left: 230px; bottom: -20px;'
  .form-white-box
    .grid--full.input
      .textarea-with-info
        .grid
          .three-fifths.grid__item>
            = f.input :description, as: :text, placeholder: 'Expliquez en quoi consiste le cours / stage, de manière à ce que l’élève comprenne bien ce qu’il y apprendra, pour éviter toute confusion. Plus de détails vous donnez, mieux c’est !', label: false, input_html: {class: 'textarea-description--tall', data: { behavior: 'text-counter', 'average-words-nb' => 20, 'good-words-nb' => 70, 'bad-text' => 'Votre description doit comporter au moins 20 mots. Nos Partenaires qui ont le plus de succès ont plus de 100 mots', 'average-text' => 'Encore quelques mots et vous aurez une superbe description !', 'good-text' => 'Superbe description !'}, value: @course.description_for_input}, wrapper_html: {class: 'flush--top'}
          .two-fifths.grid__item>
            %p.alert--info.flush--top
              Quel est ce cours ?
              %br
              Qu’y trouve-t-on ?
            %p.alert--info
              Comment se déroule t-il ?
              %br
              En plusieurs thèmes ?
            %p.alert--info Quelles sont les méthodes pratiquées ?


  = f.submit 'Enregistrer', class: 'btn btn--green btn--full'
= content_for :scripts do
  :javascript
    $(function() {
        $('#image-input').fileupload({
            dataType: 'json',
            type: 'PUT',
            acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
            replaceFileInput: false,
            submit: function (e, data) {
                data.formData = {authenticity_token: $('meta[name="csrf-token"]').attr('content') };
                return true;
            },
            add: function (e, data) {
                $('#image-progress').show().removeClass('progress-success');
                if (GLOBAL.isImageValid(this.files[0])) {
                    data.submit();
                }
            },
            done: function (e, data) {
                $('#image-progress').addClass('progress-success');
                $('#image-progress .bar').text('');
                $('#image-progress .bar').append($('<i>').addClass('icon-ok push-half--right'));
                $('#image-progress .bar').append($('<span>').text('Téléchargement terminé'));
            },
            progressall: function (e, data) {
                var progress = parseInt(data.loaded / data.total * 100, 10);
                if (progress == 100) {
                    $('#image-progress .bar').text('Finalisation...');
                } else {
                    $('#image-progress .bar').text(progress + '%');
                }
                $('#image-progress .bar').css(
                    'width',
                    progress + '%'
                );
            }
        });
        if ($('#delete-image').length > 0) {
            $('#delete-image').click(function(){
                $('#course_delete_image')[0].checked = true;
                $('#course-form').submit();
            });
        }
        $('#course_description').textareaResizer();
        $('[name="course[type]"]').change(function() {
            if ($(this).val() === 'Course::Lesson') {
                $('#recurrency').show('slow');
            } else {
                $('#recurrency').hide('slow');
            }
        });
    });

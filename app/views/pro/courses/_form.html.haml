- if @course.new_record?
  - url = pro_structure_courses_path(@structure)
- else
  - url = pro_course_path(@course)

= simple_form_for [:pro, @structure, @course], url: url, as: :course do |f|
  = f.error_notification
  - unless @course.new_record?
    %h5.form-header-group.flush--bottom
      %i.icon-picture
      Image
    .form-white-box
      - if @course.image.present?
        .text--center
          = image_tag @course.image.url(:thumb), height: 200
        = f.input :delete_image, as: :boolean, :label => "Supprimer l'image"
      .input
        = f.label :image
        = f.input :image, label: false

      - if current_pro_admin.super_admin? and @course.is_promoted
        = f.input :homepage_image, label: 'Image de la home'
  %h5.form-header-group.flush--bottom
    %i.lbc-icon-info i
    Information générales du cours
  .form-white-box
    = f.input :name, label: t('.name'), placeholder: 'Zumba, jardin musical, Vins et Fromages, etc'
    = f.association :subjects , as: :select, collection: Subject.children, input_html: {style: 'width: 74%;', 'data-behavior' => 'chosen', multiple: true}, label: t('.subjects'), selected: @course.subject_ids, label_method: lambda{|subj| "#{subj.parent.name} - #{subj.name}" }, wrapper_html: {class: 'flush--bottom'}
    %p.field-form-info.blue Dans ce champ, renseignez une discipline et selectionnez-en autant que vous le souhaitez.

    .input.grid--full
      = f.label :is_individual, class: 'control-label v-top' do
        %abbr *
        = t('.individual_course')
      %div
        .radio
          %input#course_is_individual{type: 'radio', name: 'course[is_individual]', value: 'true', checked: @course.is_individual?}
          %label{for: 'course_is_individual'}> Individuel / Particulier
        .radio
          %input#course_is_collectif{type: 'radio', name: 'course[is_individual]', value: 'false', checked: !@course.is_individual?}
          %label{for: 'course_is_collectif'}> Collectif -&nbsp;
          %label Nombre moyen de participants &nbsp;
          = f.input :nb_participants, label: false, input_html: {type: :number, placeholder: 12, style: 'max-width: 5em;', class: 'soft-half--left'}, wrapper_html: {class: 'flush--ends inline'}

    .input
      .control-label.v-top *Type de cours
      %div
        .radio
          %input#type_course_lesson{type: 'radio', name: 'course[type]', value: 'Course::Lesson', checked: @course.type == 'Course::Lesson'}>
          %label{for: 'type_course_lesson'} Cours récurrent
        .radio
          %input#type_course_workshop{type: 'radio', name: 'course[type]', value: 'Course::Workshop', checked: @course.type == 'Course::Workshop'}>
          %label{for: 'type_course_workshop'} Cours-atelier
        .radio
          %input#type_course_training{type: 'radio', name: 'course[type]', value: 'Course::Training', checked: @course.type == 'Course::Training'}>
          %label{for: 'type_course_training'} Stage
      - if @course.errors.messages[:type]
        %p.alert.alert-error= @course.errors.messages[:type].first

  #recurrency{style: @course.is_lesson? ? '' : 'display: none;'}
    %h5.form-header-group.flush--bottom.flush--top
      %i.icon-time
      Récurrence
    .form-white-box
      .input.depend-on-reccurent-course>
        %label.control-label{for: 'course_start_date'} Date du premier et dernier cours
        = f.input :start_date, as: :string, label: false, wrapper_html: {class: 'flush--ends'}, input_html: {style: 'margin-right: 5px', class: 'datepicker-input', value: (@course.start_date.present? ? l(@course.start_date) : l(Date.today)), 'data-behavior' => 'datepicker'}
        \-&nbsp;
        = f.input :end_date, as: :string, label: false, wrapper_html: {class: 'flush--ends'}, input_html: {class: 'datepicker-input', value: (@course.end_date.present? ? l(@course.end_date) : l(Date.today + 1.year)), 'data-behavior' => 'datepicker'}
      = f.input :frequency, as: :select, collection: Course::COURSE_FREQUENCIES, label_method: lambda {|course_frequency| t(course_frequency)}, default: Course::COURSE_FREQUENCIES.first, label: t('.frequency'), wrapper_html: {class: 'depend-on-reccurent-course'}

  %h5.form-header-group.flush--bottom Description
  .form-white-box
    .grid--full.input
      .textarea-with-info
        .grid
          .three-fifths.grid__item>
            = f.input :description, as: :text, placeholder: 'Expliquez en quoi consiste le cours / stage, de manière à ce que l’élève comprenne bien ce qu’il y apprendra, pour éviter toute confusion. Plus de détails vous donnez, mieux c’est !', label: false, input_html: {class: 'textarea-description--tall', data: { behavior: 'text-counter', 'average-words-nb' => 20, 'good-words-nb' => 70, 'bad-text' => 'Votre description doit comporter au moins 20 mots. Nos Partenaires qui ont le plus de succès ont plus de 100 mots', 'average-text' => 'Encore quelques mots et vous aurez une superbe description !', 'good-text' => 'Superbe description !'}, value: @course.description_for_input}, wrapper_html: {class: 'flush--top'}
          .two-fifths.grid__item>
            %p.alert--info.flush--top
              Quel est ce cours ?
              %br
              Qu’y trouve-t-on ?
            %p.alert--info
              Comment se déroule t-il ?
              %br
              En plusieurs thèmes ?
            %p.alert--info Quelles sont les méthodes pratiquées ?


  %div
    = f.submit (@course.new_record? ? 'Créer le cours' : 'Mettre à jour le cours'), class: 'btn btn--success'
= content_for :scripts do
  :javascript
    $(function() {
        $('#course_description').textareaResizer();
        $('[name=course[type]]').change(function() {
            if ($(this).val() === 'Course::Lesson') {
                $('#recurrency').show('slow');
            } else {
                $('#recurrency').hide('slow');
            }
        });
    });

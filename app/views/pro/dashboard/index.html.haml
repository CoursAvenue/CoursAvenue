= side_menu_currently_at 'Dashboard'

%h1.header-group
  %i.fa.fa-dashboard
  Tableau de bord

%h3.header-group
  %i.fa.fa-map-marker
  Professeurs enregistrés / Avis laissés (non cumulé)
.white-box.islet.text--center
  .gamma
    = Admin.normal.count
    profs
    \/
    = Comment.count
    avis
  #admins

.white-box.islet.text--center
  .gamma
    = Admin.normal.count
    profs
  #admins2

%h3.header-group
  %i.fa.fa-map-marker
  Professeurs enregistrés / Avis laissés - progression / semaine (non cumulé)
.white-box.islet.text--center
  #comments-admins-progression-weekly

%h3.header-group
  %i.fa.fa-map-marker
  Professeurs enregistrés / Avis laissés - progression (cumulé)
.white-box.islet.text--center
  .gamma
    = Admin.normal.count
    profs
    \/
    = Comment.count
    avis
  #admins-progression


%h3.header-group
  %i.fa.fa-group
  Élèves notifiés pour avis
.white-box.islet.text--center
  .gamma
    = User.count
    élèves
  #students

- if params[:with_subjects]
  %h3.header-group
    %i.fa.fa-map-marker
    Nombre d'établissements par disciplines (dont le prof est enregistré)
  .white-box.islet.text--center
    #subjects
- else
  %p.text--center= link_to 'Voir la répartition par discipline',  pro_dashboard_path(with_subjects: true), class: 'btn btn--blue'

%h3.header-group
  %i.fa.fa-youtube-play
  Demande d'infos
.white-box.islet.text--center
  .gamma
    = Conversation.where{subject == "Demande d'informations"}.count
    Messages
  #messages

%h3.header-group
  %i.fa.fa-youtube-play
  Photos & Vidéos
.white-box.islet.text--center
  .gamma
    = Media::Video.count
    Vidéos /
    = Media::Image.count
    Photos
  #medias

%h3.header-group
  %i.fa.fa-list
  Cours en ligne
.white-box.islet.text--center
  .gamma
    = Course.active.count
    cours en ligne
  #courses

%h3.header-group
  %i.fa.fa-map-marker
  Lieux d'enseignement
.white-box.islet.text--center
  .gamma
    = Place.count
    Lieux

%h3.header-group
  %i.fa.fa-map-time
  Heures de création de profil
.white-box.islet.text--center
  #admins-hours

%h3.header-group
  %i.fa.fa-map-time
  Heures de dépot d'avis
.white-box.islet.text--center
  #comments-hours

.text--center= link_to 'Mots clés', pro_keywords_path, class: 'btn btn--blue'
.text--center= link_to 'Mots clés tapé par les utilisateurs', pro_search_term_logs_path, class: 'btn btn--blue'

= content_for :scripts do
  :javascript
    $(function() {
        new Highcharts.Chart({
            chart: { renderTo: 'admins-hours', type: 'column' },
            title: { text: null },
            xAxis: { categories: ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23"] },
            yAxis: { title: { text: ''}},
            series: [
              { data: #{@admins_by_hour.map{|key, value| value}},
                name: 'Profs inscrits'
               }
            ]
        });
        new Highcharts.Chart({
            chart: { renderTo: 'comments-hours', type: 'column' },
            title: { text: null },
            xAxis: { categories: ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23"] },
            yAxis: { title: { text: ''}},
            series: [
              { data: #{@comments_by_hour.map{|key, value| value}},
                name: 'Profs inscrits'
               }
            ]
        });
        new Highcharts.Chart({
            chart: { renderTo: 'admins2', type: 'column' },
            title: { text: null },
            xAxis: { categories: ['0', '1-4', '5-10', '+ de 10'] },
            yAxis: { title: { text: ''}},
            series: [
              { data: #{@admins2.map{|count| count}},
                name: 'Profs inscrits'
               }
            ]
        });
        new Highcharts.Chart({
            chart: { renderTo: 'admins', type: 'column' },
            title: { text: null },
            xAxis: { categories: #{@comments_hash.map{|date, count| l(Date.parse(date.to_s), format: :short)}} },
            yAxis: { title: { text: ''}},
            series: [
              { data: #{@admins_hash.map{|date, count| count}},
                name: 'Profs inscrits'
               },
              { data: #{@comments_hash.map{|date, count| count}},
                name: 'Avis'
              }
            ]
        });
        new Highcharts.Chart({
            chart: { renderTo: 'comments-admins-progression-weekly', type: 'column' },
            title: { text: null },
            xAxis: { categories: #{@admins_weekly.map{|date, count| l(Date.parse(date.to_s), format: :short)}} },
            yAxis: { title: { text: ''}},
            series: [
              { data: #{@admins_weekly.map{|date, count| count}},
                name: 'Profs inscrits'
               },
              { data: #{@comments_weekly.map{|date, count| count}},
                name: 'Avis'
              }
            ]
        });
        new Highcharts.Chart({
            chart: { renderTo: 'admins-progression'},
            title: { text: null },
            xAxis: { categories: #{@admins_progression.map{|date, count| l((date), format: :short)}} },
            yAxis: { title: { text: ''}},
            series: [
              { data: #{@admins_progression.map{|date, count| count}},
                name: 'Profs inscrits'
               },
              { data: #{@comments_progression.map{|date, count| count}},
                name: 'Avis'
              }
            ]
        });
        new Highcharts.Chart({
            chart: { renderTo: 'students', type: 'column' },
            title: { text: null },
            xAxis: { categories: #{@students.map{|date, count| l(Date.parse(date.to_s), format: :short)}} },
            yAxis: { title: { text: ''}},
            series: [{ data: #{@students.map{|date, count| (count > 10000 ? 100 : count)}} }]
        });
        new Highcharts.Chart({
            chart: { renderTo: 'messages', type: 'column' },
            title: { text: null },
            xAxis: { categories: #{@messages.map{|date, count| l(Date.parse(date.to_s), format: :short)}} },
            yAxis: { title: { text: ''}},
            series: [{ data: #{@messages.map{|date, count| count}} }]
        });
        new Highcharts.Chart({
            chart: { renderTo: 'medias', type: 'column' },
            title: { text: null },
            xAxis: { categories: #{@medias_dates.map{|date, count| l(Date.parse(date.to_s), format: :short)}} },
            yAxis: { title: { text: ''}},
            series: [
              { data: #{@videos.sort.map{|date, count| count}},
                name: 'Vidéos'
               },
              { data: #{@images.sort.map{|date, count| (count > 1200 ? 10 : count)}},
                name: 'Photos'
              }
            ]
        });
        new Highcharts.Chart({
            chart: { renderTo: 'courses', type: 'column' },
            title: { text: null },
            xAxis: { categories: #{@courses.map{|date, count| l(Date.parse(date.to_s), format: :short)}} },
            yAxis: { title: { text: ''}},
            series: [{ data: #{@courses.map{|date, count| count}} }]
        });
    });

- if params[:with_subjects].present?
  = content_for :scripts do
    :javascript
      $(function() {
        new Highcharts.Chart({
            chart: { renderTo: 'subjects', type: 'column' },
            title: { text: null },
            xAxis: { categories: #{@structures.map{|subject_name, count| subject_name}} },
            yAxis: { title: { text: ''}},
            series: [{ data: #{@structures.map{|subject_name, count| count}} }]
        });
    });

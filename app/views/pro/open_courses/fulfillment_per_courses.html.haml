= side_menu_currently_at 'Journées Portes Ouvertes'

= render partial: 'pro/open_courses/tabs', locals: { current: 'fulfillment_per_courses' }

%h3.push-half--bottom Remplissage par cours
%table.table--striped.dataTable.table--data.white-box.push--bottom#dataTable
  %thead
    %tr
      %th Nom du cours
      %th Nom de l'établissement
      %th Disciplines mères
      %th Disciplines enfants
      %th
      %th
      %th # places
  %tbody
    - Course::Open.active.each do |course|
      %tr
        %td= link_to course.name, pro_structure_course_open_path(course.structure, course)
        %td= link_to course.structure.name, pro_structure_course_opens_path(course.structure)
        %td= course.subjects.map(&:root).uniq.map(&:name).join(', ')
        %td= join_child_subjects_text course
        - max    = 0
        - places = 0
        - course.plannings.each do |planning|
          - max    += planning.nb_participants_max
          - places += planning.nb_jpo_participants
        %td{ data: { value: places } }= places
        %td{ data: { value: max } }= max
        %td{ data: { value: places } }
          .progress.inline-block.v-middle.push-half--left{style: 'width: 10em;'}
            .bar.bar-success{style: "width: #{(places * 100) / max}%;"}
              #{places}/#{max}

= content_for :scripts do
  :javascript
    $(function() {
        var myTextExtraction = function(node) {
            // extract data from markup and return it
            if (node.dataset.value) {
                return parseInt(node.dataset.value);
            } else {
                return node.innerHTML;
            }
        }
        $('#dataTable').tablesorter({ textExtraction: myTextExtraction });
    });

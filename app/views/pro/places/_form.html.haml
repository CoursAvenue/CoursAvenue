/ - if @place.new_record?
/   %h4.text--center
/     Ce nouveau lieu accueille t-il d'autres professeurs / structures ?
/   .text--center
/     %a.btn.btn--large Oui
/     %a.btn.btn--large Non

/   Vérifiez si ce lieu existe :

.islet
  = simple_form_for [:pro, @structure, @place] do |f|
    - if params[:from].present?
      %input{type: 'hidden', value: params[:from], name: 'from'}
    = f.error_notification

    .grid.form-white-box#buttons-wrapper
      .grid__item.one-half>
        %a.btn.btn--full.btn--blue#find-place Lieu en location
      .grid__item.one-half>
        %a.btn.btn--full#build-place J'ai mon propre lieu

    .form-white-box#find-place-container.hidden
      %p
        Vérifiez si le lieu existe déjà sur CoursAvenue
      %input.v-middle#location-autocomplete{placeholder: 'Nom du lieu / Adresse', type: 'text', 'data-list' => 'location-list', autocomplete: 'off', name: 'address_name', value: params[:address_name], style: 'width: 500px;'}
      %a#location-does-not-exist.v-middle{href: 'javascript:void(0)'} Le lieu n'existe pas encore
    #build-place-container.hidden
      %h5.form-header-group Adresse
      .form-white-box
        = f.simple_fields_for :location do |location_form|
          = location_form.input :name, label: t('.name'), placeholder: 'Ex. : Gymnase Bercy'
          = location_form.input :street, placeholder: 'Ex. : 83 avenue du général Leclerc'
          .input
            = location_form.label :zip_code
            = location_form.input :zip_code, placeholder: 'Ex. : 75008', input_html: { class: 'zip_code', data: {behavior: 'city-autocomplete', el: '#place_location_city_id'} }, label: false
            = location_form.input :city_id, collection: [@structure.city], label: false


      %h5.helper-label.form-header-group{data: { behavior: 'tooltip', 'original-title' => 'Coordonnées que les élèves receveront pour faire une réservation' }} Contact pour la réservation
      .form-white-box
        = f.simple_fields_for :contacts do |contact_form|
          = contact_form.input :name,         label: Contact.human_attribute_name(:name)
          = contact_form.input :email,        label: Contact.human_attribute_name(:email)
          = contact_form.input :phone,        label: Contact.human_attribute_name(:phone)
          = contact_form.input :mobile_phone, label: Contact.human_attribute_name(:mobile_phone)

    .form-actions#submit.hidden
      = f.submit (@place.new_record? ? 'Créer mon lieu' : 'Mettre à jour mon lieu'), class: 'btn btn--success'

= content_for :scripts do
  :javascript
    $(function() {
        $('#find-place').click(function() {
            $('#buttons-wrapper').hide('slow');
            $('#find-place-container').removeClass('hidden');
        });
        $('#build-place').click(function() {
            $('#build-place-container').removeClass('hidden');
            $('#buttons-wrapper').hide('slow');
            $('#submit').removeClass('hidden');
        });
        $('#location-autocomplete').typeahead([
          {
            name: 'locations',
            valueKey: 'name',
            remote: '/locations.json?term=%QUERY'
          }
        ]);
        $('#location-does-not-exist').click(function() {
            $('#find-place-container').hide('slow');
            $('#submit').removeClass('hidden');
            $('#build-place-container').removeClass('hidden');
        });
        $('#location-autocomplete').on('typeahead:selected', function(event, data) {
            var location_id_input = $('<input type="hidden">').val(data.id)
            $('#build-place-container').append(location_id_input);
            $('#place_location_attributes_name').val(data.name).attr('disabled', true);
            $('#place_location_attributes_street').val(data.street).attr('disabled', true);
            $('#place_location_attributes_zip_code').val(data.zip_code).attr('disabled', true);
            var city_option = $('<option>').val(data.city.id).text(data.city.name).attr('disabled', true);
            $('#place_location_attributes_city_id').append(city_option);
            $('#place_location_attributes_city_id').val(data.city.id).attr('disabled', true);
            $('#build-place-container').removeClass('hidden');
            $('#submit').removeClass('hidden');
        });
    });

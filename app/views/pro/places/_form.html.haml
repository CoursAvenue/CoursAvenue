/ - if @place.new_record?
/   %h4.text--center
/     Ce nouveau lieu accueille t-il d'autres professeurs / structures ?
/   .text--center
/     %a.btn.btn--large Oui
/     %a.btn.btn--large Non

/   Vérifiez si ce lieu existe :

.islet
  = simple_form_for [:pro, @structure, @place] do |f|
    - if params[:from].present?
      %input{type: 'hidden', value: params[:from], name: 'from'}
    = f.error_notification

    .grid.form-white-box#buttons-wrapper
      .grid__item.one-half>
        %a.btn.btn--full.btn--blue#find-place Lieu partagé avec d'autres professeurs
      .grid__item.one-half>
        %a.btn.btn--full#build-place J'ai mon propre lieu

    #find-place-container
      .relative
        %input#location-autocomplete{class: 'search-input', placeholder: 'Nom du lieu / Adresse', type: 'text', 'data-list' => 'location-list', autocomplete: 'off', name: 'address_name', value: params[:address_name]}
        %ul#location-list.autocomplete-list.hidden
    #build-place-container.hidden
      %h5.form-header-group Adresse
      .form-white-box
        = f.simple_fields_for :location do |location_form|
          = location_form.input :name, label: t('.name'), label_html: { class: 'helper-label', data: {behavior: 'tooltip', 'original-title' => "Si vous avez plus d’un lieu, et pour pouvoir les différencier, renseignez un nom spécifique pour chaque adresse. Par exemple, si l’un de vos 3 lieux se trouve au 34 rue Buffaut, renseignez « Buffaut » ; s’il concerne le gymnase Léo Lagrange, renseignez « Lagrange », etc." }}, placeholder: 'Ex. : Gymnase Bercy'
          = location_form.input :street, placeholder: 'Ex. : 83 avenue du général Leclerc'
          .input
            = location_form.label :zip_code
            = location_form.input :zip_code, placeholder: 'Ex. : 75008', input_html: { class: 'zip_code', data: {behavior: 'city-autocomplete', el: '#place_location_city_id'} }, label: false
            = location_form.input :city_id, collection: [@structure.city], label: false


    %h5.helper-label.form-header-group{data: { behavior: 'tooltip', 'original-title' => 'Coordonnées que les élèves receveront pour faire une réservation' }} Contact pour la réservation
    .form-white-box
      = f.simple_fields_for :contacts do |contact_form|
        = contact_form.input :name
        = contact_form.input :email
        = contact_form.input :phone
        = contact_form.input :mobile_phone

    %br
    .form-actions
      = f.submit (@place.new_record? ? 'Créer mon lieu' : 'Mettre à jour mon lieu'), class: 'btn btn--success'

= content_for :scripts do
  :javascript
    $(function() {
        $('find-place').addEvent('click', function() {
            $('find-place-container').removeClass('hidden');
            $('buttons-wrapper').hide('slow');
        });
        $('build-place').addEvent('click', function() {
            $('build-place-container').removeClass('hidden');
            $('buttons-wrapper').hide('slow');
        });
        var autocomplete = new GLOBAL.Objects.AjaxAutocomplete("location-autocomplete", {
            onInput : function(newValue) {
                location_autocomplete_request.get({term: newValue + ' '});
            }
        });
        var location_autocomplete_request = new Request.JSON({
            url: '/locations.json',
            onSuccess: function(locations) {
                locations.each(function(_location) {
                    var li = new Element('li');
                    var html = _location.name + '<br/>';
                    html += '<i>'+ _location.street + ', ' + _location.city.name  + '</i>';
                    var a = new Element('a', { href: 'javascript:void(0)', html: html});
                    li.adopt(a);
                    autocomplete.data_list.adopt(li);
                });
            }.bind(this)
        });
    });

= side_menu_currently_at 'Mes infos'
= render partial: 'pro/structures/tabs', locals:{ current: 'lieux'}

%h3.header-group Nouveau lieu pour mes cours
.islet
  = simple_form_for [:pro, @structure, @place] do |f|
    - if params[:from].present?
      %input{type: 'hidden', value: params[:from], name: 'from'}
    = f.error_notification

    - unless @place.errors.any?
      #buttons-wrapper
        .text--center= image_tag 'texts/shared-place.png', height: 80
        .grid.form-white-box.flush--top
          .grid__item.one-half>
            %a.btn.btn--full.btn--blue#find-place Lieu partagé
          .grid__item.one-half>
            %a.btn.btn--full#build-place J'ai mon propre lieu

      .form-white-box#find-place-container.hidden
        %p
          Vérifiez si le lieu existe déjà sur CoursAvenue
        %input.v-middle#location-autocomplete{placeholder: 'Nom du lieu / Adresse', type: 'text', 'data-list' => 'location-list', autocomplete: 'off', name: 'address_name', value: params[:address_name]}
        %a#location-does-not-exist.v-middle{href: 'javascript:void(0)'} Le lieu n'existe pas encore
    #build-place-container{class: @place.errors.any? ? '' : 'hidden'}
      %h5.form-header-group Adresse
      .form-white-box
        = f.simple_fields_for :location do |location_form|
          = location_form.input :name, label: Location.human_attribute_name(:name), input_html: { placeholder: "Exemple : Bastille, Studio Bleu, Centre de Danse du Marais", data: {behavior: 'tooltip'}, title: "Si pas de nom : métro ou arrêt de bus le plus proche, nom de quartier / rue, nom d'un parc à proximité"}
          = location_form.input :street, placeholder: 'Ex. : 83 avenue du général Leclerc', label: Location.human_attribute_name(:street)
          .input
            = location_form.label :zip_code, label: Location.human_attribute_name(:zip_code)
            = location_form.input :zip_code, placeholder: 'Ex. : 75008', input_html: { class: 'zip_code', data: {behavior: 'city-autocomplete', el: '#place_location_attributes_city_id'} }, label: false
            = location_form.input :city_id, collection: [@structure.city], label: false, selected: @place.location.city


      %h5.helper-label.form-header-group{data: { behavior: 'tooltip', 'original-title' => 'Coordonnées de réservation visibles par les élèves' }} Contact pour la réservation
      .form-white-box
        = f.simple_fields_for :contacts do |contact_form|
          = contact_form.input :name,         label: Contact.human_attribute_name(:name), input_html: {value: contact_form.object.name || @structure.main_contact.name}
          = contact_form.input :email,        label: Contact.human_attribute_name(:email), input_html: {value: contact_form.object.email || @structure.main_contact.email}
          = contact_form.input :phone,        label: Contact.human_attribute_name(:phone), input_html: {value: contact_form.object.phone || @structure.main_contact.phone_number}
          = contact_form.input :mobile_phone, label: Contact.human_attribute_name(:mobile_phone), input_html: {value: contact_form.object.mobile_phone || @structure.main_contact.mobile_phone_number}

    .form-actions#submit{class: @place.errors.any? ? '' : 'hidden'}
      = f.submit 'Enregistrer', class: 'btn btn--success'

%script#location-template{:type => 'text/x-handlebars-template'}
  %p.line-height-normal
    {{name}}
    %br
    %i.gray.milli {{street}}, {{city.name}}
= content_for :scripts do
  :javascript
    $(function() {
        $('#find-place').click(function() {
            $('#buttons-wrapper').hide('slow');
            $('#find-place-container').removeClass('hidden');
        });
        $('#build-place').click(function() {
            $('#build-place-container').removeClass('hidden');
            $('#buttons-wrapper').hide('slow');
            $('#submit').removeClass('hidden');
        });
        var source = $("#location-template").html(),
            template = Handlebars.compile(source);
        $('#location-autocomplete').typeahead([
          {
            name: 'locations',
            template: template,
            remote: '/locations.json?term=%QUERY'
          }
        ]);
        $('#location-does-not-exist').click(function() {
            $('#find-place-container').hide('slow');
            $('#submit').removeClass('hidden');
            $('#build-place-container').removeClass('hidden');
        });
        $('#location-autocomplete').on('typeahead:selected', function(event, data) {
            var location_id_input = $('<input type="hidden" name="place[location_attributes][id]">').val(data.id);
            $(this).val(data.name);
            $('#build-place-container').append(location_id_input);
            $('#place_location_attributes_name').val(data.name).attr('disabled', true);
            $('#place_location_attributes_street').val(data.street).attr('disabled', true);
            $('#place_location_attributes_zip_code').val(data.zip_code).attr('disabled', true);
            var city_option = $('<option>').val(data.city.id).text(data.city.name).attr('disabled', true);
            $('#place_location_attributes_city_id').append(city_option);
            $('#place_location_attributes_city_id').val(data.city.id).attr('disabled', true);
            $('#build-place-container').removeClass('hidden');
            $('#submit').removeClass('hidden');
        });
    });

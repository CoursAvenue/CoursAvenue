= simple_form_for [:pro, @course_creation_form], url: create_course_pro_registrations_path, method: :post, html: { class: 'push--ends', autocomplete: "false"} do |f|
  = f.hidden_field :structure_id, value: @structure.slug
  = f.hidden_field :course_type, value: 'Course::Lesson'

  .grid.push-half--bottom
    .grid__item.one-third.text--right.v-middle>
      %label{ for: 'structure_course_creation_form[course_name]' }> Nom du cours collectif
    .grid__item.v-middle.two-thirds>
      = f.input :course_name, wrapper_html: { class: 'flush', style: 'max-width: 600px;' }, label: false, input_html: { class: 'input--large one-whole', autocomplete: 'off' }
      %p.flush
        %i.blue
          Un bon nom doit être court et explicite : aucune information sur le lieu, l'âge ou le niveau.

  .grid.push-half--bottom
    .grid__item.one-third.text--right.v-middle>
      %label{ for: 'structure_course_creation_form[course_subject_ids]' }> Étiquette disciplines
    .grid__item.v-middle.two-thirds>
      = f.input :course_subject_ids, as: :select, collection: little_children_subjects(@structure), input_html: { id: 'subjects', data: { behavior: 'chosen', placeholder: 'Sélectionnez une ou plusieurs disciplines', autocomplete: "false" }, multiple: true, class: 'input--large hard one-whole' }, label: false, label_method: lambda{|subj| subj.name }, wrapper_html: { class: 'flush', style: 'max-width: 600px;' }

  .grid.push-half--bottom
    .grid__item.one-third.text--right.v-middle>
      %label> Prix séance d'essai
    .grid__item.v-middle.two-thirds>
      - price = @structure.prices.build
      - price_free = !price.persisted? ? true : price.free?
      .input
        = f.simple_fields_for :course_prices, price, child_index: 0 do |price_form|
          = price_form.hidden_field :type, value: 'Price::Trial'
          %select.push-half--right.input--large.inline-block.v-middle{ data: { trial_select: true } }
            %option{ value: 'free'    , selected: price_free } Gratuit
            %option{ value: 'not-free', selected: !price_free } Payante
          %div.v-middle{ class: (price_free ? 'hidden' : ''), data: { trial_price_input: true } }
            %span.label--large.v-middle Tarif :
            = price_form.input :amount, label: false, label_html: { class: 'label--large' }, input_html: { class: 'input--large flush text--center', style: 'width: 5em;', type: 'string', value: (price.amount ? price.amount.gsub(',00', '') : 0 ), data: { amount: true } }, wrapper_html: { class: 'flush v-middle inline-block' }
            %span.push-half--right.label--large.v-middle €

  .grid.push-half--bottom
    .grid__item.one-third.text--right.v-middle>
      %label{ for: 'structure_course_creation_form[course_frequency]' }> Fréquence des cours
    .grid__item.v-middle.two-thirds>
      = f.input :course_frequency, as: :select, collection: Course::COURSE_FREQUENCIES, label_method: lambda {|course_frequency| t(course_frequency)}, default: Course::COURSE_FREQUENCIES.first,
        label: false, label_html: { class: 'label--large' }, input_html: { class: 'input--large' }

  .grid.push-half--bottom
    .grid__item.one-third.text--right.v-middle>
      %label{ for: 'structure_course_creation_form[place_name]' }> Nom du lieu
    .grid__item.v-middle.two-thirds>
      = f.input :place_name, wrapper_html: { class: 'flush', style: 'max-width: 600px;' }, label: false, input_html: { class: 'input--large one-whole', autocomplete: 'off' }

  .grid.push-half--bottom
    .grid__item.one-third.text--right.v-middle>
      %label{ for: 'structure_course_creation_form[place_street]' }> Adresse
    .grid__item.v-middle.two-thirds>
      = f.input :place_street, wrapper_html: { class: 'flush', style: 'max-width: 600px;' }, label: false, input_html: { class: 'input--large one-whole', autocomplete: 'off' }

  .grid.push-half--bottom
    .grid__item.one-third.text--right.v-middle>
      %label{ for: 'structure_course_creation_form[place_zip_code]' }> Code postal et ville
    .grid__item.v-middle.two-thirds>
      - place = @course_creation_form.place.present? ? @course_creation_form.place : Place.new
      = f.input :place_zip_code, input_html: { class: 'input--large', style: 'width: 7em;', data: { behavior: 'city-autocomplete', el: '#place_city_id' } }, label: false, wrapper_html: { class: 'flush v-middle inline-block' }
      = f.input :place_city_id, as: :select, collection: [place.city], label: false, selected: place.city, wrapper_html: { class: 'flush v-middle inline-block' },
        input_html: { class: 'input--large', id: 'place_city_id' }

      = f.input :place_latitude, as: :hidden
      = f.input :place_longitude, as: :hidden

  .grid.push-half--bottom
    .grid__item.one-third.text--right.v-middle>
      %label.label--large.required.control-label Dates
    .grid__item.v-middle.two-thirds>
      .input.input-daterange.input-group{ data: { behavior: 'datepicker', start_date: l(Date.today) } }
        %input.input-sm.input--large#start-date.datepicker-input{ type: 'text', value: (@course_creation_form.planning_start_date.nil? ? '' : l(@course_creation_form.planning_start_date)), placeholder: "02/08/#{Date.today.year}",
          name: 'structure_course_creation_form[start_date]' }
        %label.label--large -
        %input.input-sm.input--large#end-date.datepicker-input{ type: 'text', value: (@course_creation_form.planning_end_date.nil? || @course_creation_form.planning_start_date == @course_creation_form.planning_end_date ? '' : l(@course_creation_form.planning_end_date)), placeholder: "04/08/#{Date.today.year}", name: 'structure_course_creation_form[end_date]', title: 'Laisser vide si le stage se déroule sur 1 seul jour' }

  .grid.push-half--bottom
    .grid__item.one-third.text--right.v-middle>
      = f.label :planning_start_time, class: 'control-label label--large' do
        %i.fa.fa-time
        Horaires
    .grid__item.v-middle.two-thirds>
      = f.input :planning_start_time, as: :time, minute_step: 15, default: { year: 2000, month: 1, day: 1, hour: 8, min: 00 }, wrapper_html: { id: 'start-time-wrapper', class: 'flush input-time--large inline-block' }, label: false, input_html: { class: 'input--large' }
      %span.label--large.v-middle.inline-block -
      = f.input :planning_end_time, as: :time, minute_step: 15, min_hour: 7, label: false, default: { year: 2000, month: 1, day: 1, hour: 9, min: 00 }, wrapper_html: { id: 'end-time-wrapper', class: 'flush input-time--large inline-block' }, input_html: { class: 'input--large' }

  .grid.push-half--bottom
    .grid__item.one-third.text--right.v-middle>
      %label{ for: 'structure_course_creation_form[level_ids]' }>= t('planning.levels')
    .grid__item.v-middle.two-thirds>
      = f.input :level_ids, as: :check_boxes, collection: Level.all, label_method: lambda {|level| t(level.name)}, label: false, wrapper_html: { data: { behavior: 'checkbox-list' } }, input_html: { class: 'input--large' }

  .grid.push-half--bottom
    .grid__item.one-third.text--right.v-middle>
      %label{ for: 'structure_course_creation_form[audience_ids]' }>= t('planning.audiences')
    .grid__item.v-middle.two-thirds>
      = f.input :audience_ids, as: :check_boxes, collection: Audience.all, label_method: lambda {|audience| t(audience.name)}, label: false, input_html: { class: 'input--large' }

  .grid.push-half--bottom#children-ages{class: f.object.audiences.include?(Audience::KID) ? '' : 'hidden'}
    .grid__item.one-third.text--right.v-middle>
      %label.label--large.control-label.v-middle Âge pour les enfants (optionnel)
    .grid__item.v-middle.two-thirds>
      %span.v-middle.label--large.inline-block de
      = f.input :min_age_for_kid, label: false, input_html: { class: 'input--large', style: 'width: 5em;', value: f.object.min_age_for_kid || 0}, wrapper_html: { class: 'flush v-middle inline-block' }
      %span.v-middl.label--large.inline-block à
      = f.input :max_age_for_kid, label: false, input_html: { class: 'input--large', style: 'width: 5em;', value: f.object.max_age_for_kid || 18}, wrapper_html: { class: 'flush v-middle inline-block' }
      %span.v-middle ans

  .text--center
    = f.submit 'Commencer avec CoursAvenue', class: 'btn--large btn btn--full btn--green one-whole', data: { disable_with: "Enregistrement en cours" }, style: 'max-width: 900px;'

- content_for :scripts do
  :javascript
    $(document).ready(function() {
        $('[data-trial-select]').change(function() {
            if ($(this).val() == 'free') {
                $('[data-amount]').val(0);
                $('[data-trial-price-input]').addClass('hidden');
            } else {
                $('[data-trial-price-input]').removeClass('hidden');
            }
        });

      if ($('[name="structure_course_creation_form[audience_ids][]"]').length > 0) {
          $('[name="structure_course_creation_form[audience_ids][]"]').change(function(event) {
              if (event.target.value == '1') {
                  if (event.target.checked) {
                      $('#children-ages').removeClass('hidden');
                  } else {
                      $('#children-ages').addClass('hidden');
                  }
              }
          });
      }

      $('#end-date').tooltip();
      $('#start-date').change(function() {
          if ($('#start-date').val().length > 0) {
              $('#end-date').attr('placeholder', $('#start-date').val());
              $('#end-date').datepicker('setStartDate', $('#start-date').datepicker('getDate'));
          }
      });
      $('#start-date').change();
    });

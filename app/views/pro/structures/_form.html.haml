= simple_form_for [:pro, @structure], html: { autocomplete: 'off', id: 'structure-form' } do |structure_form|

  - if params[:return_to].present?
    %input{type: 'hidden', value: params[:return_to], name: 'return_to'}
  .soft--sides{ data: { behavior: 'wizard-helper', content: t('pro.structures.wizard_helper.logo')} }
    %h5 Logo
    %div
      %div{ data: { behavior: 'image-input' } }
        .input
          %label.control-label.label--large> Logo de votre structure
          .input-container
            #logo-progress.progress.hidden.push-half--bottom{ data: { progress: true } }
              .bar
            - if @structure.logo?
              .push-half--bottom.bordered{ style: "height: 200px; width: 200px; display: inline-block; line-height: 196px;" }<
                = image_tag @structure.logo.url(:thumb), class: 'v-middle inline-block', style: 'max-height: 100%;', width: 197, height: 197
              .visuallyhidden= structure_form.input :delete_logo, as: :boolean, label: false
            - else
              .push-half--bottom.bordered{style: "height: 200px; width: 200px; display: inline-block; line-height: 196px; display: none;"}
                %img#logo-placeholder.v-middle.inline-block{ style: 'max-height: 100%;' }

            - if @structure.logo? and @structure.valid?
              .inline-block.v-top>
                = link_to crop_logo_pro_structure_path(@structure), class: 'fancybox.ajax btn btn--small btn--blue push-half--right push-half--bottom', data: { behavior: 'modal', width: 800 } do
                  %i.fa.fa-expand.soft--sides-half--right
                  Recadrer
                %br
                = link_to 'javascript:void(0)', class: 'btn btn--blue btn--small push-half--bottom', data: { trigger: true } do
                  %i.fa.fa-picture-o
                  Modifier
                %br
                %a.btn.btn--small.btn--red#delete-logo{href: 'javascript:void(0)'}
                  %i.fa.fa-trash-o.soft--sides-half--right
                  Supprimer
            - elsif @structure.valid?
              = link_to 'javascript:void(0)', class: 'btn btn--blue btn--small', data: { trigger: true } do
                %i.fa.fa-picture-o
                Choisir mon logo
            .visuallyhidden= structure_form.input :logo, label: false, input_html: {id: 'logo-input'}

  %hr.push--ends
  .soft--sides{ data: { behavior: 'wizard-helper', content: t('pro.structures.wizard_helper.name') } }
    %h5#informations Structure
    = structure_form.input :name, label: t('.structure_name'), wrapper_html: {class: 'flush--bottom'}, label_html: { class: 'label--large' }, input_html: { class: 'input--large' }
    = structure_form.input :structure_type, collection: Structure::STRUCTURE_TYPES.map{|structure_type| [ t(structure_type), structure_type]}, input_html: { class: 'input--large', style: 'max-width: 29em;' }, label_html: { class: 'label--large' }, wrapper_html: { class: 'flush--bottom' }
  %hr.push--ends
  .soft--sides{ data: { behavior: 'wizard-helper', content: t('pro.structures.wizard_helper.subjects') } }
    %h5#informations Étiquettes de disciplines
    %div
      %div{ data: { behavior: 'parent-descendant-subjects', 'parent-select' => '#parent-subjects', 'descendant-select' => '#subject-descendants-select', 'descendant-select-wrapper' => '#descendants-subjects' } }
        = structure_form.association :subjects, as: :select, collection: Subject.roots.order('name ASC'), input_html: { class: 'input--large', style: 'width: 74%;', id: 'parent-subjects', data: { behavior: 'chosen', placeholder: 'Sélectionnez une ou plusieurs disciplines' }, multiple: true }, label: 'Disciplines générales pratiquées ', label_method: lambda{|subj| subj.name }, wrapper_html: { class: 'flush--bottom' }, label_html: { class: 'label--large' }
        #descendants-subjects
          .input{title: 'Sélectionnez plusieurs disciplines en maintenant la touche CTRL ou CMD enfoncée.', data: {behavior: 'tooltip'}}>
            %label.control-label.label--large> Sous disciplines
            %select#subject-descendants-select.input--large{ name: 'structure[subject_descendants_ids][]', style: 'width: 74%;', multiple: true, data: {behavior: 'chosen', placeholder: 'Tapez ou sélectionnez une ou plusieurs disciplines', selected: @structure.subjects.children.map(&:id).join(',')}}>
      - if @structure.errors[:children_subjects].present?
        .input_field_error.red.text--right= @structure.errors[:children_subjects].to_sentence

  %hr.push--ends
  .soft--sides{ data: { behavior: 'wizard-helper', content: t('pro.structures.wizard_helper.courses') } }
    %h5 Cours proposés
    .input
      %label.text--left.hard--top.label--large.control-label> Type de cours
      .input-container>
        = structure_form.input :gives_group_courses, as: :boolean, wrapper_class: { class: 'checkbox-at-left' }, input_html: { class: 'input--large' }, label_html: { class: 'label--large' }
        = structure_form.input :gives_individual_courses, as: :boolean, wrapper_class: { class: 'checkbox-at-left ' }, input_html: { class: 'input--large' }, label_html: { class: 'label--large hard--bottom' }
    -# %label.text--left.hard--top.label--large.control-label> Type de cours
    .input#teaches-at-home{ class: @structure.gives_individual_courses ? '' : 'hidden'}
      %label.control-label.label--large.inline-block.v-middle{ for: 'structure_teaches_at_home' }> Je me déplace à domicile autour de
      .input-container.v-middle>
        = structure_form.input :teaches_at_home, as: :boolean, include_blank: false, input_html: { class: 'input--large' }, label: false, wrapper_html: { class: 'inline-block v-middle flush' }
        - @home_places.each_with_index do |place, child_index|
          = structure_form.simple_fields_for :places, place, child_index: child_index, html: { class: 'inline-block' } do |place_form|
            = place_form.input :type, as: :hidden
            = place_form.input :zip_code, input_html: { placeholder: 'Code postal', class: 'one-whole', style: 'width: 7em', data: { behavior: 'city-autocomplete', el: "#place_city_id_#{child_index}" } }, label: false, wrapper_html: { class: 'inline-block v-middle flush' }
            = place_form.input :city_id, collection: [place.city], label: false, selected: place.city, wrapper_html: { class: 'flush--top inline-block v-middle flush' }, input_html: { id: "place_city_id_#{child_index}"}
            %label.inline-block.v-middle dans un rayon de
            = place_form.input :radius, input_html: { style: 'width: 5em;' }, wrapper_html: {class: 'inline-block v-middle flush'}, label: false
          %label.label--large.inline-block.v-middle{ for: 'structure_teaches_at_home_radius' } km


    .input.push--top
      %label.text--left.hard--top.label--large.control-label> Public
      .input-container>
        = structure_form.input :gives_non_professional_courses, as: :boolean, wrapper_class: { class: 'checkbox-at-left' }, input_html: { class: 'input--large' }, label_html: { class: 'label--large' }
        = structure_form.input :gives_professional_courses, as: :boolean, wrapper_class: { class: 'checkbox-at-left ' }, input_html: { class: 'input--large' }, label_html: { class: 'label--large' }


  %hr.push--ends
  .soft--sides{ data: { behavior: 'wizard-helper', content: t('pro.structures.wizard_helper.funding_types') } }

    %h5 Financements acceptés
    = structure_form.input :funding_type_ids, as: :select, collection: FundingType.all.map{|funding_type| [ t(funding_type.name), funding_type.id]}, input_html: { class: 'input--large', style: 'width: 74%;', multiple: true, data: { behavior: 'chosen', placeholder: 'Sélectionnez un ou plusieurs choix'}}, selected: @structure.funding_types.map(&:id), label_html: { class: 'label--large' }, wrapper_html: { class: ' flush--bottom' }

  %hr.push--ends
  .soft--sides{ data: { behavior: 'wizard-helper', content: t('pro.structures.wizard_helper.description') } }
    %h5.push--top Description
    .input
      = structure_form.label :description, class: 'label--large'
      .input-container>
        = structure_form.input :description, label: false, wrapper_html: { class: 'flush one-whole' }, input_html: { style: 'height: 130px;', id: 'description-textarea', class: 'input--large one-whole', data: { behavior: 'text-counter', 'average-words-nb' => 30, 'good-words-nb' => 100, 'bad-text' => 'Votre description doit comporter au moins 30 mots. Nos Partenaires qui ont le plus de succès ont plus de 100 mots.', 'average-text' => 'Encore quelques mots et vous aurez une superbe description !', 'good-text' => 'Superbe description !'}}
  - if @structure.comments_count >= 5
    %hr.push--ends
    .soft--sides
      %h5 Autre
      %div
        = structure_form.input :widget_status, as: :select, collection: Structure::WIDGET_STATUS, label_method: lambda{|status| t("structures.widget_status.#{status}")}, label_html: { class: 'label--large' }, input_html: { class: 'input--large' }
        = structure_form.input :widget_url, as: :string, label_html: { class: 'label--large' }, input_html: { class: 'input--large' }

  .soft--sides
    = structure_form.button :submit, "Enregistrer", class: 'btn btn--green btn--full push--bottom', data: { disable_with: "En cours d'enregistrement" }

= content_for :scripts do
  :javascript
    $(function() {
        $('#structure_gives_individual_courses').change(function(){
            if (this.checked) {
                $('#teaches-at-home').slideDown();
            } else {
                $('#teaches-at-home').slideUp();
            }
        });
        // --------------- Handling structure logo
        $('#logo-input').fileupload({
            dataType: 'json',
            type: 'PUT',
            replaceFileInput: false,
            submit: function (e, data) {
                data.formData = {authenticity_token: $('meta[name="csrf-token"]').attr('content') };
                return true;
            },
            add: function (e, data) {
                $('#logo-progress').show().removeClass('progress-success');
                if (GLOBAL.isImageValid(this.files[0])) {
                    data.submit();
                }
            },
            done: function (e, data) {
                $('#logo-progress').addClass('progress-success');
                $('#logo-progress .bar').text('');
                $('#logo-progress .bar').append($('<i>').addClass('fa fa-check push-half--right'));
                $('#logo-progress .bar').append($('<span>').text('Téléchargement terminé'));
            },
            progressall: function (e, data) {
                var progress = parseInt(data.loaded / data.total * 100, 10);
                if (progress == 100) {
                    $('#logo-progress .bar').text('Finalisation...');
                } else {
                    $('#logo-progress .bar').text(progress + '%');
                }
                $('#logo-progress .bar').css('width', progress + '%');
            }
        });
        if ($('#delete-logo').length > 0) {
            $('#delete-logo').click(function(){
                $('#structure_delete_logo')[0].checked = true;
                $('#structure-form').submit();
            });
        }
        $('#description-textarea').textareaResizer();
        if($('#logo-placeholder').length > 0) {
            $('#logo-placeholder').load(function(){
                $(this).parent().show();
            });
        }
    });


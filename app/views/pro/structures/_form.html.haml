%h1.header-group
  %i.icon-user
  Mise à jour du profil
.islet
  = simple_form_for [:pro, @structure] ,html: { autocomplete: 'off', id: 'structure-form' } do |structure_form|
    .form-inputs
      %h5.form-header-group
        %i.icon-picture
        Image & Logo
      .form-white-box
        #logo-progress.progress.hidden
          .bar
        .text--center
          - if @structure.logo?
            = image_tag @structure.logo.url(:large), id: 'logo-logo'
            %br
            %a.btn.btn--small.btn--red#delete-logo{href: 'javascript:void(0)'}
              %i.icon-trash
              Supprimer
            .visuallyhidden= structure_form.input :delete_logo, as: :boolean, label: false
          - else
            %img.center-block#logo-logo{style: 'max-height: 500px; max-width: 500px'}
          - [:crop_x, :crop_y, :crop_width, :crop_height].each do |attribute|
            = structure_form.input attribute, as: :hidden, input_html: {id: attribute}
          = structure_form.input :cropping, as: :hidden, input_html: {value: true}

        .input
          .control-label Logo de votre structure
          = link_to 'javascript:void(0)', class: 'btn btn--blue btn--small', onclick: "$('#logo-input').click();" do
            %i.icon-picture
            Choisir mon logo
          = structure_form.input :logo, label: false, wrapper_html: {style: 'position:absolute; left:-1000px;'}, input_html: {id: 'logo-input'}

        %p.field-form-info.blue Ce logo apparaîtra dans les résultats de recherche.
        %hr

        #image-progress.progress.hidden
          .bar
        .text--center
          - if @structure.image?
            = image_tag @structure.image.url(:normal), id: 'logo-image', style: 'max-height: 300px; max-width: 500px'
            %br
            %a.btn.btn--small.btn--red#delete-image{href: 'javascript:void(0)'}
              %i.icon-trash
              Supprimer
            .visuallyhidden= structure_form.input :delete_image, as: :boolean, label: false
          - else
            %img.center-block#logo-image{style: 'max-height: 200px; max-width: 500px'}
        .input
          .control-label Image pour vous illustrer
          = link_to 'javascript:void(0)', class: 'btn btn--blue btn--small', onclick: "$('#image-input').click();" do
            %i.icon-picture
            Choisir mon image
          = structure_form.input :image, label: false, wrapper_html: {style: 'position:absolute; left:-1000px;'}, input_html: {id: 'image-input'}
        %p.field-form-info.blue Cette image apparaîtra dans la partie gauche de votre profil public.

      %h5.form-header-group
        %i.lbc-icon-info i
        Informations
      .form-white-box.push--bottom
        = structure_form.input :name, label: t('.structure_name'), wrapper_html: {class: 'flush--bottom'}
        %p.field-form-info.blue= t('.structure_name_info')
        = structure_form.input :website, placeholder: 'Ex : http://www.je-danse-a-paris.com'
        = structure_form.input :facebook_url, wrapper_html: {class: 'flush--bottom'}, placeholder: 'Ex. : https://www.facebook.com/CoursAvenue'
        = structure_form.association :subjects , as: :select, collection: (Subject.roots + Subject.children), input_html: {style: 'width: 490px;', data: {behavior: 'chosen', placeholder: 'Sélectionnez une ou plusieurs disciplines'}, multiple: true}, label: 'Disciplines pratiquées ', label_method: lambda{|subj| subj.name }, wrapper_html: {class: 'flush--bottom'}
        = structure_form.input :structure_type, collection: Structure::STRUCTURE_TYPES.map{|structure_type| [ t(structure_type), structure_type]}, input_html: {style: 'max-width: 29em;'}

      %h5.form-header-group.push--top Description
      %div.relative
        = image_tag 'texts/structure-description.png', height: 85, style: 'position: absolute; left: 230px; bottom: -25px;'
      .form-white-box.push--top
        .grid--full.input
          .textarea-with-info.grid__item.width-auto
            .grid--full
              .three-fifths.grid__item.soft-half--right>
                = structure_form.input :description, label: false, wrapper_html: {class: 'flush--top'}, input_html: {id: 'description-textarea', class: 'textarea-description--tall', placeholder: 'Mettez en avant votre différence !', data: { behavior: 'text-counter', 'average-words-nb' => 30, 'good-words-nb' => 100, 'bad-text' => 'Votre description doit comporter au moins 30 mots. Nos Partenaires qui ont le plus de succès ont plus de 100 mots.', 'average-text' => 'Encore quelques mots et vous aurez une superbe description !', 'good-text' => 'Superbe description !'}, value: @structure.description_for_input}
              .two-fifths.grid__item
                %p.alert--info.flush--top
                  Qu'est-ce qui vous différencie ?
                  %br
                  Pourquoi nos Internautes devraient-il réserver chez vous ? Soyez sincère et original !
                %p.alert--info
                  Quelle est votre équipe, combien êtes-vous ?
                  %br
                  Qui se cache derrière tout ça ?
                  %br
                  Quel est le profil de vos professeurs ?
                %p.alert--info
                  Depuis quand votre structure existe-t-elle ?
                  %br
                  Quelle est sa notoriété ?
                  %br
                  A-t-elle formé des célébrités ?
    .form-actions
      = structure_form.button :submit, "Enregistrer", class: 'btn btn--green'

= content_for :scripts do
  :javascript
    $(function() {
        var initialize_crop, logo_jcrop_api;
        GLOBAL.ratio = #{@ratio};
        // --------------- Handling structure logo
        $('#logo-input').fileupload({
            dataType: 'json',
            type: 'PUT',
            acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
            submit: function (e, data) {
                data.formData = {authenticity_token: $('meta[name="csrf-token"]').attr('content') };
                return true;
            },
            add: function (e, data) {
                $('#logo-progress').show().removeClass('progress-success');
                data.submit();
            },
            done: function (e, data) {
                $('#logo-progress').addClass('progress-success');
                $('#logo-progress .bar').text('');
                $('#logo-progress .bar').append($('<i>').addClass('icon-ok push-half--right'));
                $('#logo-progress .bar').append($('<span>').text('Téléchargement terminé'));
                GLOBAL.ratio = data.result.logo.ratio;
                if (logo_jcrop_api) {
                    logo_jcrop_api.setImage(data.result.logo.path);
                    logo_jcrop_api.setSelect([data.result.logo.crop_x, data.result.logo.crop_y, data.result.logo.crop_width, data.result.logo.crop_height]);
                } else {
                    $('#logo-logo').attr('src', data.result.logo.path);
                    initialize_crop(data.result.logo.crop_x, data.result.logo.crop_y, data.result.logo.crop_width, data.result.logo.crop_height);
                }
            },
            progressall: function (e, data) {
                var progress = parseInt(data.loaded / data.total * 100, 10);
                if (progress == 100) {
                    $('#logo-progress .bar').text('Finalisation...');
                } else {
                    $('#logo-progress .bar').text(progress + '%');
                }
                $('#logo-progress .bar').css(
                    'width',
                    progress + '%'
                );
            }
        });
        $('#logo-input').change(function(event) {
            if (this.files && this.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#logo-logo').attr('src', e.target.result);
                }
                reader.readAsDataURL(this.files[0]);
            }
        });
        // --------------- Handling structure image
        $('#image-input').fileupload({
            dataType: 'json',
            type: 'PUT',
            acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
            submit: function (e, data) {
                data.formData = {authenticity_token: $('meta[name="csrf-token"]').attr('content') };
                return true;
            },
            add: function (e, data) {
                $('#image-progress').show().removeClass('progress-success');
                data.submit();
            },
            done: function (e, data) {
                $('#image-progress').addClass('progress-success');
                $('#image-progress .bar').text('');
                $('#image-progress .bar').append($('<i>').addClass('icon-ok push-half--right'));
                $('#image-progress .bar').append($('<span>').text('Téléchargement terminé'));
            },
            progressall: function (e, data) {
                var progress = parseInt(data.loaded / data.total * 100, 10);
                if (progress == 100) {
                    $('#image-progress .bar').text('Finalisation...');
                } else {
                    $('#image-progress .bar').text(progress + '%');
                }
                $('#image-progress .bar').css(
                    'width',
                    progress + '%'
                );
            }
        });
        $('#image-input').change(function(event) {
            if (this.files && this.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#logo-image').attr('src', e.target.result);
                }
                reader.readAsDataURL(this.files[0]);
            }
        });
        initialize_crop = function(crop_x, crop_y, crop_width, crop_height) {
            if ($('#logo-logo').attr('src') && !logo_jcrop_api) {
                logo_jcrop_api = $.Jcrop('#logo-logo', {
                    onChange: update_crop,
                    onSelect: update_crop,
                    setSelect: [(crop_x / GLOBAL.ratio), (crop_y / GLOBAL.ratio), (crop_x + crop_width) / GLOBAL.ratio, (crop_y + crop_height) / GLOBAL.ratio],
                    aspectRatio: 1
                });
                function update_crop(coords) {
                  var rx = 100 / coords.w;
                  var ry = 100 / coords.h;
                  $('#crop_x').val(Math.floor(coords.x * GLOBAL.ratio));
                  $('#crop_y').val(Math.floor(coords.y * GLOBAL.ratio));
                  $('#crop_width').val(Math.floor(coords.w * GLOBAL.ratio));
                  $('#crop_height').val(Math.floor(coords.h * GLOBAL.ratio));
                }
            }
        };
        initialize_crop(#{@structure.crop_x || 0}, #{@structure.crop_y || 0}, #{@structure.crop_width || 200}, #{@structure.crop_height || 200});
        if ($('#delete-image').length > 0) {
            $('#delete-image').click(function(){
                $('#structure_delete_image')[0].checked = true;
                $('#structure-form').submit();
            });
        }
        if ($('#delete-logo').length > 0) {
            $('#delete-logo').click(function(){
                $('#structure_delete_logo')[0].checked = true;
                $('#structure-form').submit();
            });
        }
        $('#description-textarea').textareaResizer();
    });

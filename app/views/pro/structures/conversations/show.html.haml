= side_menu_currently_at 'messages'
- recipients = @conversation.recipients.reject{|recipient| recipient == @admin }
.panel
  .panel__header.soft
    %ol.nav.flush.breadcrumb{ itemprop: 'breadcrumb' }
      %li.delta= link_to 'Boîte de réception', pro_structure_conversations_path(@structure)
      %li.delta Conversation avec #{truncate(recipients.map{|recipient| recipient.name || recipient.email}.join(', '), length: 50) }
  .panel__body.soft
    .grid
      .grid__item.two-twelfths.v-middle.text--right>
        %p.epsilon.flush Objet
      .grid__item.ten-twelfths.soft-half--left.v-middle>
        %p.epsilon.flush
          = @conversation.subject
          - if conversation_extra_infos(@conversation).present?
            = "(#{conversation_extra_infos(@conversation).map{ |extra_info| t("#{extra_info.name}_small") }.join(', ')})"
    .grid
      .grid__item.two-twelfths.v-middle.text--right>
        %p.epsilon.flush À
      .grid__item.ten-twelfths.soft-half--left.v-middle>
        %p.epsilon.flush= recipients.map(&:name).join(', ')

    - user = @conversation.recipients.detect{ |recipient| recipient.is_a? User }
    - if conversation_courses(@conversation, @structure).present?
      .grid
        .grid__item.two-twelfths.v-middle.text--right>
          %strong.flush= "Cours concerné".pluralize(conversation_courses(@conversation, @structure).length)
        .grid__item.ten-twelfths.soft-half--left.v-middle>
          = conversation_courses(@conversation, @structure).map(&:name).join(', ')

    .push--top= render partial: 'pro/structures/conversations/form', locals: { conversation: @conversation }

    = render partial: 'messages/message', collection: @conversation.messages.order('created_at DESC').reject(&:new_record?)

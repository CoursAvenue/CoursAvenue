- price_groups = structure.price_groups.where(course_type: course.type) if price_groups.nil?

.push--bottom{ id: "course-#{course.id}"}
  .panel
    - if course.plannings.empty? or course.price_group.nil?
      .panel__header.panel__header--blue.soft-half.f-weight-bold
        .grid
          .grid__item.v-middle.nine-twelfths.line-height-1-7.epsilon>
            Complétez les informations suivantes pour que le cours devienne visible sur votre profil :
          .grid__item.v-middle.three-twelfths>
            - if course.plannings.empty?
              = link_to 'Ajouter un créneau', new_pro_structure_course_planning_path(structure, course), class: 'btn btn--small fancybox.ajax nowrap', data: { behavior: 'modal', width: '800', padding: '0' }
            - if price_groups.empty?
              = link_to 'Définir les tarifs', pro_structure_price_groups_path(structure), class: 'btn btn--small', style: 'margin-top: 2px;'
            - elsif course.price_group.nil?
              %strong Sélectionnez une grille tarifaire

    .panel__body.soft-half
      = simple_form_for [:pro, structure, course], url: pro_structure_course_path(structure, course), as: :course, remote: true, html: { data: { behavior: 'live-form' } } do |f|
        .float--right
          .nowrap
            - if price_groups.empty?
              = link_to 'Définir les tarifs', pro_structure_price_groups_path(structure), class: 'btn btn--small btn--blue'
            - else
              %label.inline-block.v-middle Tarifs appliqués :
              = f.input :price_group_id, as: :select, collection: price_groups, label: false, input_html: { style: 'max-width: 16em;' }, wrapper_html: {  class: 'flush v-middle inline-block' }, include_blank: 'Sélectionnez la grille tarifaire'
        .push-half--bottom
          %h5.flush--bottom.inline-block.v-middle.push-half--right{ data: { behavior: 'tooltip', title: course.name } }
            = truncate course.name, length: 35
          .nowrap.inline-block
            = link_to edit_pro_structure_course_path(structure, course), class: 'v-middle fancybox.ajax nowrap', data: { behavior: 'modal', width: '750', padding: '0' } do
              %i.fa.fa-pencil
              Modifier
            %span.v-middle /
            = link_to ask_for_deletion_pro_structure_course_path(structure, course), class: 'v-middle red fancybox.ajax nowrap', data: { behavior: 'modal', width: '400', padding: '0' } do
              %i.fa.fa-trash-o
              Supprimer
        - if course.is_lesson?
          = f.input :frequency, as: :select, collection: Course::COURSE_FREQUENCIES, label_method: lambda {|course_frequency| t(course_frequency)}, default: Course::COURSE_FREQUENCIES.first, label: false, wrapper_html: { class: 'flush inline-block v-middle' }
          %span.soft-half--sides.v-middle> du
          .inline-block.v-middle{ data: { behavior: 'date-range', 'start-date' => '#course_start_date', 'end-date' => '#course_end_date' } }>
            = f.input :start_date, as: :string, label: false, input_html: { value: (course.start_date ? l(course.start_date) : nil), style: 'margin-right: 5px', class: 'datepicker-input datepicker-input--small', data: { behavior: 'datepicker' } }, wrapper_html: { class: 'flush inline-block v-middle' }
            %span.soft-half--sides.v-middle> au
            = f.input :end_date, as: :string, label: false, input_html: { value: (course.end_date ? l(course.end_date) : nil), class: 'datepicker-input datepicker-input--small', data: { behavior: 'datepicker' } }, wrapper_html: { class: 'flush inline-block v-middle' }
        - if course.is_private?
          - if course.teaches_at_home? and course.home_place and course.place
            %strong 2 lieux :
          - if course.teaches_at_home? and course.home_place
            À domicile (#{course.home_place.city.name}, #{course.home_place.radius})
          - if course.teaches_at_home? and course.home_place and course.place
            et
          - if course.place
            = course.place.address
      .push-half--ends
        = render partial: "pro/structures/courses/plannings/#{course.underscore_name}_list", locals: { course: course, structure: structure }
        - unless course.on_appointment?
          = link_to 'Ajouter un créneau', new_pro_structure_course_planning_path(structure, course), class: 'btn btn--green btn--small fancybox.ajax nowrap', data: { behavior: 'modal', width: '800', padding: '0' }

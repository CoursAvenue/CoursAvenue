= content_for :title do
  Publiez vos cours gratuitement et recruter de nouveaux élèves.

= render layout: 'pro/home/header_layout', locals: { hide_menu: true, bg_center: true } do
  .main-container.soft--sides.mega-soft--ends.text--center
    %h1.white.soft-black-text-shadow.f-size-big.relative.flush
      Création d'un dormant

.main-container
  = simple_form_for [:pro, @structure], url: pro_structures_path, method: :post, html: { class: 'push--ends' } do |f|
    .grid.push-half--bottom
      .grid__item.one-third.text--right.v-middle>
        %label.epsilon{ for: 'structure_name' }> Nom de la structure
      .grid__item.v-middle.two-thirds>
        = f.input :name, wrapper_html: { class: 'flush', style: 'max-width: 600px;' }, label: false, input_html: { class: 'input--large one-whole' }
    .grid.push-half--bottom
      .grid__item.one-third.text--right.v-middle>
        .epsilon> Type de structure
      .grid__item.v-middle.two-thirds>
        .btn-group{ data: { toggle: 'buttons' } }
          %label.text--center.soft-half.btn.button{ style: 'height: 95px; width: 150px;', class: (@structure.structure_type == 'structures.independant' ? 'active' : '')}>
            = image_tag 'icons/icon-structure-type-independant.png', height: 40, width: 31, class: 'v-middle'
            .soft-half--ends Professeur indépendant
            %input{ type: 'radio', name: 'structure[structure_type]', value: 'structures.independant', checked: @structure.structure_type == 'structures.independant' }
          %label.text--center.soft-half.btn.button{ style: 'height: 95px; width: 150px;', class: (@structure.structure_type == 'structures.association' ? 'active' : '')}>
            = image_tag 'icons/icon-structure-type-association.png', height: 50, width: 84, class: 'v-middle'
            .soft-half--ends Association
            %input{ type: 'radio', name: 'structure[structure_type]', value: 'structures.association', checked: @structure.structure_type == 'structures.association' }
          %label.text--center.soft-half.btn.button{ style: 'height: 95px; width: 150px;', class: (@structure.structure_type == 'structures.company' ? 'active' : '')}>
            = image_tag 'icons/icon-structure-type-school.png', height: 50, width: 64, class: 'v-middle'
            .soft-half--ends École privée
            %input{ type: 'radio', name: 'structure[structure_type]', value: 'structures.company', checked: @structure.structure_type == 'structures.company' }
          %label.text--center.soft-half.btn.button{ style: 'height: 95px; width: 150px;', class: (@structure.structure_type == 'structures.other' ? 'active' : '')}>
            = image_tag 'icons/icon-structure-type-other.png', width: 70, height: 50, class: 'v-middle', style: 'padding-top: 25px; padding-bottom: 8px;'
            .soft-half--ends Autres
            %input{ type: 'radio', name: 'structure[structure_type]', value: 'structures.other', checked: @structure.structure_type == 'structures.other' }


    %div{ data: { behavior: 'parent-descendant-subjects', 'parent-select' => '#parent-subjects', 'descendant-select' => '#subject-descendants-select', 'descendant-select-wrapper' => '#descendants-subjects' } }
      .grid.push-half--bottom
        .grid__item.one-third.text--right.v-middle>
          .epsilon> Disciplines générales pratiquées
        .grid__item.v-middle.two-thirds>
          = f.association :subjects, as: :select, collection: Subject.roots.order('position ASC'), input_html: { id: 'parent-subjects', data: { behavior: 'chosen', placeholder: 'Sélectionnez une ou plusieurs disciplines' }, multiple: true, class: 'input--large hard one-whole' }, label: false, label_method: lambda{|subj| subj.name }, wrapper_html: { class: 'flush', style: 'max-width: 600px;' }
      #descendants-subject.grid.push-half--bottom
        .grid__item.one-third.text--right.v-middle>
          .epsilon> Sous disciplines
        .grid__item.v-middle.two-thirds{ title: 'Sélectionnez plusieurs disciplines en maintenant la touche CTRL ou CMD enfoncée.', data: { behavior: 'tooltip' } }>
          %div{ style: 'max-width: 600px;'}
            %select.input--large.one-whole.hard#subject-descendants-select{ name: 'structure[subject_descendants_ids][]', multiple: true, data: { behavior: 'chosen', placeholder: 'Tapez ou sélectionnez une ou plusieurs disciplines', selected: @structure.subjects.select{|subj| subj.depth == 2}.map(&:id).join(',')}}>
            - if @structure.errors[:children_subjects].present?
              .input_field_error.red.text--right= @structure.errors[:children_subjects].to_sentence

    %div{ data: { behavior: 'show-more-on-demand' } }
      - @structure.places.each_with_index do |place, i|
        %div{ data: { el: true, hidden: !place.persisted? } }
          = f.simple_fields_for :places, place, child_index: i do |place_form|
            = place_form.input :type, as: :hidden
            .grid.push-half--bottom
              .grid__item.one-third.text--right.v-middle>
                %label.epsilon{ for: "structure_places_attributes_#{i}_name" }> Nom du lieu
              .grid__item.v-middle.two-thirds>
                = place_form.input :name, label: false, input_html: {  placeholder: "Ex. : Bastille, Gymnase municipal, etc.", class: 'input--large one-whole', data: { behavior: 'tooltip' }, title: "Si pas de nom : métro ou arrêt de bus le plus proche, nom de quartier / rue, nom d'un parc à proximité" }, wrapper_html: { class: 'flush', style: 'max-width: 600px;' }
            .grid.push-half--bottom
              .grid__item.one-third.text--right.v-middle>
                %label.epsilon{ for: "structure_places_attributes_#{i}_street" }> Adresse du lieu
              .grid__item.v-middle.two-thirds>
                = place_form.input :street, input_html: { placeholder: 'N° + rue', class: 'input--large one-whole' }, label: false, wrapper_html: { class: 'inline-block flush v-top', style: 'width: 20em;' }
                .input.flush.city-autocomplete-wrapper.inline-block.v-top<
                  = place_form.input :zip_code, input_html: { placeholder: 'Code postal', class: 'input--large one-whole', data: { behavior: 'city-autocomplete', el: "#structure_places_attributes_#{i}_city_id" } }, label: false, wrapper_html: { style: 'width: 8em;', class: 'flush' }
                  = place_form.association :city, collection: [@structure.city], label: false, wrapper_html: { style: 'width: 10em;' }, input_html: { class: 'input--large one-whole' }, wrapper_html: { class: 'flush' }
      .grid.push-half--bottom
        .grid__item.one-third.text--right.v-middle>
        .grid__item.v-middle.two-thirds>
          %a.cursor-pointer{ data: { trigger: true } }
            %i.fa.fa-plus
            Ajouter un lieu

    %div{ data: { behavior: 'show-more-on-demand' } }
      - @structure.phone_numbers.each_with_index do |phone_number, i|
        %div{ data: { el: true, hidden: !phone_number.persisted? } }
          = f.simple_fields_for :phone_numbers, phone_number, child_index: i do |phone_number_form|
            .grid.push-half--bottom
              .grid__item.one-third.text--right.v-middle>
                %label.epsilon{ for: "structure_phone_numbers_attributes_#{i}_number" }> Numéro de téléphone
              .grid__item.v-middle.two-thirds>
                = phone_number_form.input :number, label: false, input_html: {  placeholder: "06 07 65 33 23", class: 'input--large one-whole' }, wrapper_html: { class: 'flush', style: 'max-width: 600px;' }
      .grid.push-half--bottom
        .grid__item.one-third.text--right.v-middle>
        .grid__item.v-middle.two-thirds>
          %a.cursor-pointer{ data: { trigger: true } }
            %i.fa.fa-plus
            Ajouter un téléphone
    .grid.push-half--bottom
      .grid__item.one-third.text--right.v-middle>
        %label.epsilon Email principal
      .grid__item.v-middle.two-thirds>
        = f.input :contact_email, label: false, input_html: { class: 'input--large' }
    .grid.push-half--bottom
      .grid__item.one-third.text--right.v-middle>
        %label.epsilon Autres email SÉPARÉ PAR DES ";" SANS ESPACES
      .grid__item.v-middle.two-thirds>
        = f.input :other_emails, placeholder: 'toto@gmail.com;titi@gmail.com', label: false, input_html: { class: 'input--large' }
    .grid.push--ends
      .grid__item.one-third.text--right.v-middle>
      .grid__item.v-middle.two-thirds>
        = f.input :is_sleeping, as: :hidden, input_html: { value: true }
        = f.submit 'Continuer', class: 'btn--large btn btn--full btn--green', data: { disable_with: "Profil en cours de création" }, style: 'max-width: 600px;'


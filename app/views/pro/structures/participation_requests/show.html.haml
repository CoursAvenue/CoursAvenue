= side_menu_currently_at 'inscriptions'

.panel
  .panel__header.soft
    - if @participation_request.pending? and @participation_request.last_modified_by == 'User' and @participation_request.created_at > 2.days.ago
      .float--right.nowrap.orange.soft-half--top
        %i.fa.fa-clock-o.delta
        %strong.delta Reçu il y a
        %strong.delta#expires-in
    %ol.nav.flush.breadcrumb{ itemprop: 'breadcrumb' }
      %li.gamma.f-weight-500= link_to 'Mes inscriptions', pro_structure_participation_requests_path(@structure)
      %li.gamma.f-weight-500.flush Inscription de #{@user.name}
  .panel__body.soft--ends
    = render partial: 'pro/structures/participation_requests/table_recap', locals: { participation_request: @participation_request }

  .panel__header.soft.bordered--top
    %h4.flush À propos de l'élève
  .panel__body.soft
    .grid
      .grid__item.three-twelfths>
        = image_tag @user.avatar_url(:thumb), class: 'center-block push-half--bottom'
        %p.delta.push-half--bottom
          <strong>#{@user.name}</strong>, #{@user.city.try(:name)}
        %p.epsilon.push-half--bottom
          Membre depuis le #{l(@user.sign_up_at.to_date, format: :long)}
        - if @user.age
          %p.epsilon.push-half--bottom
            = "#{@user.age} ans"

      .grid__item.nine-twelfths.bordered--left>
        %h4 Historique des messages
        - if @participation_request.pending? and @participation_request.last_modified_by == 'Structure'
          = render partial: 'pro/structures/conversations/participation_request_form', locals: { participation_request: @participation_request, return_to: pro_structure_participation_request_path(@structure, @participation_request) }
        - else
          = render partial: 'pro/structures/conversations/form', locals: { conversation: @participation_request.conversation, return_to: pro_structure_participation_request_path(@structure, @participation_request) }
        = render partial: 'messages/message', collection: @participation_request.conversation.messages.order('created_at DESC').reject(&:new_record?)


= content_for :scripts do
  :javascript
    $(function() {
      var date            = Date.parse("#{l(local_time(@participation_request.created_at), format: :js )}");
      var $countdown_div = $('#expires-in');
      countdown(date,
          function(ts) {
              var hours   = ("0" + ts.hours).slice(-2);
              var minutes = ("0" + ts.minutes).slice(-2);
              var seconds = ("0" + ts.seconds).slice(-2);
              $countdown_div.text((ts.days > 0 ? ts.days + ' jours et ' : '') + hours + ':' + minutes + ':' + seconds);
          },
          countdown.DAYS|countdown.HOURS|countdown.MINUTES|countdown.SECONDS);
    });


- if @place.persisted?
  - place_url = pro_structure_place_path(@structure, @place)
- else
  - place_url = pro_structure_places_path(@structure)
.panel
  .panel__header.soft
    - if @place.is_home?
      %h4.flush Entrez la zone géographique de vos cours à domicile
      %p.flush.epsilon Où vous déplacez-vous pour vos cours particuliers à domicile ?
    - else
      %h4.flush Entrez l'adresse
      %p.flush.epsilon Où proposez-vous des cours ?
  .panel__body.soft--ends
    = simple_form_for [:pro, @structure, @place], remote: true, url: place_url, as: :place do |f|
      - # Don't use remote if is home because we'll want to redirect
      - if params[:return_to].present?
        %input{ type: 'hidden', value: params[:return_to], name: 'return_to' }
      - if params[:return_to_action].present?
        %input{ type: 'hidden', value: params[:return_to_action], name: 'return_to_action' }
      .soft--sides
        - if @place.is_home?
          %h5 Je me déplace à domicile autour de :
        - else
          %h5 Adresse
        = f.input :type, as: :hidden
        - unless @place.is_home?
          = f.input :name, label_html: { class: 'label--large' }, input_html: { class: 'input--large', data: { behavior: 'tooltip' }, title: "Indiquez le nom du lieu. S'il s'agit d'une adresse privée, mettre « Résidence privée »." }
          = f.input :street, input_html: { class: 'input--large', title: "Ne renseignez ni le code postal ni la ville, uniquement le numéro et la rue.", data: { behavior: 'tooltip' } }, label_html: { class: 'label--large' }

        .input.flush--top
          = f.label :zip_code, label: 'Code postal et ville', class: 'label--large v-middle nowrap'
          = f.input :zip_code, input_html: { class: 'input--large', style: 'width: 7em;', data: { behavior: 'city-autocomplete', el: '#place_city_id' } }, label: false, wrapper_html: { class: 'flush v-middle' }
          = f.input :city_id, as: :select, collection: [@place.city], label: false, selected: @place.city, wrapper_html: { class: 'flush v-middle' }, input_html: { class: 'input--large' }
          = f.input :latitude, as: :hidden
          = f.input :longitude, as: :hidden
        - if @place.is_home?
          .input
            = f.label :radius, label: 'Dans un rayon de', class: 'label--large v-middle'
            = f.input :radius, label: false, input_html: { class: 'input--large one-whole' }, wrapper_html: { class: 'flush inline-block v-middle' }
            %span.v-middle.label--large km

      .soft--sides
        %hr.push--ends
        .input
          .control-label.label--large> Disciplines
          .input-container>
            = f.association :subjects, as: :select, collection: @structure.subjects, input_html: { id: 'parent-subjects', data: { behavior: 'chosen', placeholder: 'Sélectionnez une ou plusieurs disciplines' }, multiple: true, class: 'input--large hard one-whole' }, label: false, label_method: lambda{|subj| subj.name }, wrapper_html: { class: 'flush' }, selected: (@place.subjects.any? ? @place.subjects.map(&:id) : @structure.subjects.map(&:id))

      - unless @place.is_home?
        .soft--sides
          %hr.push--ends
          %h5
            %i.fa-info
            Infos pratiques

          = f.input :info, input_html: { class: 'input--large', data: { behavior: 'autoresize' } }, label_html: { class: 'label--large' }
          .input<
            %label.label--large.text.optional.control-label{for: "course_private_info"}
              %i.fa-lock
              Privées
            = f.input :private_info, label: false, input_html: { data: { behavior: 'autoresize' }}, wrapper_html: { class: 'flush' }, input_html: { class: 'one-whole input--large' }

      .soft--sides.push--top
        .grid--full.push--top
          .grid__item.three-twelfths.soft-half--right.palm-one-whole.palm-hard>
            - if params[:return_to_action].present?
              %a.btn.btn--full.btn--gray{ onclick: "#{params[:return_to_action]}"} Annuler
            - else
              %a.btn.btn--full.btn--gray{ onclick: '$.fancybox.close();' } Annuler
          .grid__item.nine-twelfths.palm-one-whole.palm-hard>
            = f.submit (@place.is_home? ? 'Enregistrer' : 'Suivant'), class: 'btn btn--green btn--full', data: { disable_with: "En cours d'enregistrement" }

= side_menu_currently_at 'price_groups'

.panel
  .panel__body.soft--ends
    .soft--sides{ data: { behavior: 'wizard-helper', content: t('price_group.wizard.non_affected_courses') } }
      %h4 Ajouter une grille tarifaire pour les :

      .grid
        .grid__item.one-half>
          = link_to new_pro_structure_price_group_path(@structure, course_type: 'Course::Lesson'), class: 'btn btn--green btn--full fancybox.ajax', data: { behavior: 'modal', width: '1100', padding: '0', close_click: 'false' } do
            Cours collectifs
        .grid__item.one-half>
          = link_to new_pro_structure_price_group_path(@structure, course_type: 'Course::Training'), class: 'btn btn--green btn--full fancybox.ajax', data: { behavior: 'modal', width: '1100', padding: '0', close_click: 'false' } do
            Stages / Ateliers
        -# .grid__item.one-third>
        -#   = link_to new_pro_structure_price_group_path(@structure, course_type: 'Course::Lesson'), class: 'btn btn--green btn--full fancybox.ajax', data: { behavior: 'modal', width: '1100', padding: '0' } do
        -#     Cours particuliers


    %hr.push--ends
    .soft--sides{ data: { behavior: 'wizard-helper', content: t('price_group.wizard.premium_offers') } }
      %h5 Cours collectifs

      .grid.push--bottom
        .grid__item.one-third>
          %p.flush Cours collectifs à affecter à vos grilles tarifaires :
        .grid__item.two-thirds.v-middle>
          - courses = @structure.courses.lessons.select{ |course| course.price_group.nil? }
          #lessons-to-affect= render partial: 'pro/structures/price_groups/courses_to_affect', locals: { courses: courses }
      %table.table--data.table--striped#lesson-table
        %thead
          %tr
            %th
            %th Cours affectés à la grille tarifaire
            %th.text--center
              .yellow.epsilon
                %i.fa.fa-star
                Premium
              Offres découvertes
            %th
        %tbody
          - @structure.price_groups.for_lessons.each do |price_group|
            = render partial: 'pro/structures/price_groups/price_group_row', locals: { price_group: price_group }

      = link_to 'Ajouter une grille tarifaire', new_pro_structure_price_group_path(@structure, course_type: 'Course::Lesson'), class: 'btn btn--blue btn--small fancybox.ajax', data: { behavior: 'modal', width: '1100', padding: '0' }

    %hr.push--ends
    .soft--sides
      %h5 Stages / Ateliers
      .grid.push--bottom
        .grid__item.one-third>
          %p.flush Stages & ateliers à affecter à vos grilles tarifaires :
        .grid__item.two-thirds.v-middle>
          - courses = @structure.courses.trainings.select{ |course| course.price_group.nil? }
          #trainings-to-affect= render partial: 'pro/structures/price_groups/courses_to_affect', locals: { courses: courses }

      %table.table--data.table--striped#training-table
        %thead
          %tr
            %th
            %th Cours affectés à la grille tarifaire
            %th.text--center
              .yellow.epsilon
                %i.fa.fa-star
                Premium
              Offres découvertes
            %th
        %tbody
          - @structure.price_groups.for_trainings.each do |price_group|
            = render partial: 'pro/structures/price_groups/price_group_row', locals: { price_group: price_group }

      = link_to 'Ajouter une grille tarifaire', new_pro_structure_price_group_path(@structure, course_type: 'Course::Lesson'), class: 'btn btn--blue btn--small fancybox.ajax', data: { behavior: 'modal', width: '1100', padding: '0' }

= image_tag 'gifs/loading-indicator-circle.gif', class: 'hidden push-half--left v-middle', height: 12, id: 'loader'
= content_for :scripts do
  :javascript
    var initPriceGroupDragAndDrop = function initPriceGroupDragAndDrop () {
        var $dropzones  = $('[data-behavior=lesson-dropzone], [data-behavior=training-dropzone]'),
            $draggables = $('[data-behavior=draggable]');
        // ---------------- Init draggable
        $draggables.draggable({
            addClasses: false,
            start: function() {
                var $this = $(this);
                $this.removeClass('transition-on north west');
                $('[data-behavior=' + $this.data('for') + '-dropzone]').addClass('discoverable');
            },
            stop: function(event, ui) {
                var $this = $(this);
                $('[data-behavior=' + $this.data('for') + '-dropzone]').removeClass('discoverable');
                if (!$this.data('dropped')) {
                    $this.addClass('transition-on');
                    $this.addClass('north west');
                } else {
                    $this.append($('#loader').clone().removeClass('hidden'));
                }
            }
        });
        // ---------------- Init droppable
        $dropzones.droppable({
              hoverClass: 'dragenter',
              drop: function( event, ui ) {
                  var $draggable     = ui.draggable;
                  $draggable.data('dropped', true);
                  var course_id      = $draggable.data('id');
                  var price_group_id = $(this).data('id');
                  $.ajax({
                      type: 'PUT',
                      url: Routes.add_course_pro_structure_price_group_path('#{@structure.id}', price_group_id, { format: 'js' }),
                      data: {
                          course_id: course_id
                      }
                  });
              }
        });
        // ---------------- Remove course from price_group
        $('[data-behavior=delete-price-group]').click(function() {
            var $this          = $(this);
            var course_id      = $this.data('id');
            var price_group_id = $this.data('price-group-id');
            $.ajax({
                type: 'PUT',
                url: Routes.remove_course_pro_structure_price_group_path('#{@structure.id}', price_group_id, { format: 'js' }),
                data: {
                    course_id: course_id
                }
            });
        });
    };
    initPriceGroupDragAndDrop();

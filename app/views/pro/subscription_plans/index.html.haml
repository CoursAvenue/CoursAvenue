= side_menu_currently_at 'subscription_plans'
.panel
  = render partial: 'pro/subscription_plans/tabs', locals: { current: 'subscription_plans' }

  .panel__body.soft
    .text--center
      %h2.f-weight-300.flush= "CA : #{@orders.map(&:amount).reduce(&:+)}€ TTC (#{readable_amount(@orders.map(&:amount).reduce(&:+) / 1.2)} HT)"

    %h2.text--center.f-weight-300 Total premium: #{SubscriptionPlan.where(SubscriptionPlan.arel_table[:expires_at].gt(Date.today)).count}
    %h2.text--center.push--bottom.soft--ends.f-weight-300 Premium / mois
    #graph-per-month
    -# %hr.push--ends
    -# #graph
    %hr.push--ends
    %table.table--striped
      %thead
        %tr
          %th Formule
          %th Établissement
          %th Date d'expiration
          %th Promo
          %th.text--right Prix
      %tbody
        - SubscriptionPlan.where(SubscriptionPlan.arel_table[:expires_at].gt(Date.today)).each do |subscription_plan|
          %tr
            %td= SubscriptionPlan::PLAN_TYPE_DESCRIPTION[subscription_plan.plan_type]
            %td= link_to subscription_plan.structure.name, pro_structure_path(subscription_plan.structure)
            %td= l(subscription_plan.expires_at)
            %td= subscription_plan.promotion_code.try(:code_id)
            %td.text--right
              - if subscription_plan.orders.any?
                = "#{subscription_plan.orders.last.amount}€"

= content_for :scripts do
  :javascript
    $(function() {
        new Highcharts.Chart({
            chart: { renderTo: 'graph-per-month'},
            title: { text: null },
            xAxis: { categories: #{@orders_per_month.map{|date, count| I18n.t('date.month_names')[date.month].capitalize }} },
            yAxis: { title: { text: ''}},
            series: [
              { data: #{@orders_per_month.map{|date, count| count}},
                name: 'Abonnements'
               }
            ]
        });
    });

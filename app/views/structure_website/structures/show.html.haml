= content_for :title do
  Planning des cours & stages | #{@structure.name}

= content_for :meta_description do
  #{@structure.name} | Tout le planning des cours. Réservation en ligne.

.main-container.relative
  - if @structure.website.present?
    .absolute.north.west.push-half--top.soft-half--left
      = link_to URLHelper.fix_url(@structure.website), class: 'gray' do
        %i.fa.fa-chevron-left.blue-green
        Revenir au site
  %h1.soft--top.text--center.flush= @structure.name
  %h5.text--center Planning avec demande d'inscription en ligne
  .grid
    .grid__item.eight-twelfths.palm-one-whole>
      .bg-white.soft--top.bordered
        - if @structure.courses.trainings.any?
          %h2.soft--sides Stages
        - @structure.courses.trainings.includes(:prices, :price_group).each do |training|
          - next if training.plannings.future.count == 0

          .soft--sides
            = render partial: 'structures/courses/header', locals: { course: training }

          = react_component('Course', { dont_register: true, show_location: true, course: CourseSerializer.new(training), plannings: ActiveModel::ArraySerializer.new(training.plannings.ordered_by_day.future, each_serializer: PlanningSerializer) }, { prerender: false })
          .push--bottom.bordered--bottom.soft--bottom
            = render partial: 'structures/courses/footer', locals: { course: training }
        - if @structure.courses.lessons.any?
          %h2.soft--sides Cours collectifs
        - @structure.courses.lessons.includes(:prices, :price_group).each do |lesson|
          - next if lesson.plannings.future.count == 0

          .soft--sides
            = render partial: 'structures/courses/header', locals: { course: lesson }
          = react_component('Course', { dont_register: true, show_location: true, course: CourseSerializer.new(lesson), plannings: ActiveModel::ArraySerializer.new(lesson.plannings.ordered_by_day.future, each_serializer: PlanningSerializer) }, { prerender: false })

          .push--bottom.bordered--bottom.soft--bottom
            = render partial: 'structures/courses/footer', locals: { course: lesson }
        - if @structure.courses.privates.any?
          %h2.soft--sides Cours particuliers
        - @structure.courses.privates.includes(:prices, :price_group).each do |private|
          - next if private.plannings.future.count == 0

          .soft--sides
            = render partial: 'structures/courses/header', locals: { course: private }

          = react_component('Course', { dont_register: true, show_location: true, course: CourseSerializer.new(private), plannings: ActiveModel::ArraySerializer.new(private.plannings.ordered_by_day.future, each_serializer: PlanningSerializer) }, { prerender: false })
          .push--bottom.bordered--bottom.soft--bottom
            = render partial: 'structures/courses/footer', locals: { course: private }


    .grid__item.four-twelfths.palm-one-whole>
      %div{ data: { behavior: 'sticky', old_width: 'true' } }
        = react_component('Map', { markers: @structure.places.map(&:to_react_json) } )

      .bg-white.soft--ends.bordered
        .soft--sides
          %h3.push-half--top= 'Adresse'.pluralize(@structure.places.length)
          - @structure.places.each_with_index do |place, index|
            .push--bottom
              .line-height-1-5
                %strong= "#{index + 1} #{place.name}"
                %br
                = place.address
              - if place.info.present?
                %div
                  %i= place.info
          %hr.push--ends

        - if @structure.comments_count > 0
          .soft--sides
            %h3= "#{@structure.comments_count} avis"
            - @structure.comments.order('created_at DESC').first(3).each do |comment|
              .push--bottom
                %h6.quoted.inline-block.push-half--bottom
                  = comment.title
                .read-more{ itemprop: 'reviewBody', data: { behavior: 'read-more' } }
                  = simple_format comment.content
                .text--right.flush
                  Il y a #{distance_of_time_in_words_to_now comment.created_at} par #{comment.author_name}
            .text--center.push--bottom
              = link_to 'Voir tous les avis', structure_path(@structure), class: 'btn btn--white btn--full'

  .grid
    .grid__item.eight-twelfths.palm-one-whole>
      .text--right.f-weight-600
        Planning offert avec plaisir par
        = link_to root_url(subdomain: 'pro'), class: 'inline-block v-bottom' do
          = image_tag 'logos/logo.png', alt: 'CoursAvenue', height: 20, class: 'block'
      .text--right.f-weight-600.line-height-2.push--bottom
        Pour le modifier :
        = link_to 'Connexion', pro_structure_courses_url(@structure, subdomain: 'pro')

= content_for :scripts do
  = javascript_include_tag 'https://js.stripe.com/v2/'

  :javascript
    $(function () {
        $(document.body).on('coursavenue:started', function() {
            CoursAvenue.statistic.logView(#{@structure.id}, 'website/planning');
        });
        Stripe.setPublishableKey("#{ Rails.configuration.stripe[:publishable_key] }");
    }());

#structure-profile-menu.one-whole.west.fixed.on-top-of-the-world{ style: 'top: -100px;' }
  - cache [@structure, 'structure_website/structure/show/sticker_header'] do
    .bg-site-background.soft-half--ends.bordered--bottom
      .main-container.soft--sides
        .flexbox
          .flexbox__item.v-middle.nowrap>
            .flexbox.top-page-menu
              .flexbox__item.one-twelfth.nowrap.soft-half--right
                %strong= truncate @structure.name, length: 45
              .flexbox__item
                %ul.nav.flush.v-middle.inline-block
                  - if @structure.plannings.trainings_future.any?
                    %li.soft-half--sides
                      %a.muted-link.orange{ href: '#stages-ateliers ', data: { behavior: 'scroll-to', offset_top: '-55' } } Stages & ateliers
                  - if @structure.courses.lessons.any?
                    %li.soft-half--sides
                      %a.muted-link.orange{ href: '#cours-collectifs', data: { behavior: 'scroll-to', offset_top: '-55' } } Cours réguliers
                  - if @structure.courses.privates.any?
                    %li.soft-half--sides
                      %a.muted-link.orange{ href: '#cours-particuliers', data: { behavior: 'scroll-to', offset_top: '-55' } } Cours particuliers
                  %li.soft-half--sides
                    = link_to 'Avis', structure_path(@structure), class: 'muted-link orange', target: :_blank
          .flexbox__item.v-middle.nowrap.text--right>
            %a.contact-button.btn.btn--green.nowrap{ data: { behavior: 'show-contact-panel' } }
              Contacter
              = I18n.t("structures.structure_type_contact.#{(@structure.structure_type.present? ? @structure.structure_type : 'structures.other')}")

= content_for :scripts do
  :javascript
      $(function() {
          $('body').addClass('relative').scrollspy({ target: '#structure-profile-menu .top-page-menu', offset: 85 })
      });

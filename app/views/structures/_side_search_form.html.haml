.map-with-slider.push-half--top
  - if @structures.blank?
    = gmaps( {markers: {data: [{lat: params[:lat], lng: params[:lng]}].to_json}, map_options: {maxZoom: 11, mapTypeControl: false}})
  - else
    = gmaps( {markers: {data: @json_structure_addresses}, map_options: {mapTypeControl: false}})
  .grid--full.map-slider-container
    %label.three-twelfths.grid__item.v-middle.bold> Rayon
    #radius-slider.slider.seven-twelfths.grid__item.v-middle>
      #radius-knob.slider--knob
        .slider--inner-knob
    %label.two-twelfths.grid__item.v-middle.text--right.bold
      %span#radius-label-value= params[:radius]
      km

.side-search-panel
  //-------------------------------------------------------------------------------------------------------- Subject
  .search-panel
    %h5.side-search-panel-header.toggleable-header{data: {behavior: 'toggleable', el:'+ .search-panel-content'}}
      Disciplines
      %i.icon-caret-down
    .search-panel-content
      %ul.check-list
        %li= link_to t('all_subject'), structures_path(address_name: params[:address_name], lat: params[:lat], lng: params[:lng]), class: 'subject-link'
        / ----------------- If the current subject is this one or has this one as a parent
        - Subject.roots.order(:name).each do |subject|
          - if params[:subject_id] == subject.slug || !subject.children.select{|d| d.slug == params[:subject_id]}.blank?
            %li= link_to subject.name, subject_structures_path(subject, address_name: params[:address_name], lat: params[:lat], lng: params[:lng]), class: 'selected subject-link'
            %ul.check-list
              - subject.children.order('name ASC').each do |child_subject|
                %li= link_to child_subject.name, subject_structures_path(child_subject, address_name: params[:address_name], lat: params[:lat], lng: params[:lng]), class: (params[:subject_id] == child_subject.slug ? 'selected subject-link' : 'subject-link')
          - else
            %li= link_to subject.name, subject_structures_path(subject, address_name: params[:address_name], lat: params[:lat], lng: params[:lng]), class: 'subject-link'

//-------------------------------------------------------------------------------------------------------- Gmaps
- content_for :scripts do
  :javascript
    $(function() {
        Gmaps.map.callback = function() {
            for (var i = 0; i <  this.markers.length; ++i) {
                google.maps.event.addListener(Gmaps.map.markers[i].serviceObject, 'click', function() {
                    var course_element = $('.course-element[data-location-ids~=' + this.id + ']');
                    $(document.body).animate({scrollTop: course_element.offset().top}, 200,'easeInOutCubic');
                    // GLOBAL.Scroller.toElement(course_element[0]);
                    // Unselect courses if there already are that are selected
                    $('.course-element').removeClass('selected');
                    course_element.addClass('selected');
                }.bind(Gmaps.map.markers[i]));
                google.maps.event.addListener(Gmaps.map.markers[i].serviceObject, 'mouseover', function(event) {
                    var course_element = $('.course-element[data-location-ids~=' + this.id + ']');
                    // Unselect courses if there already are that are selected
                    course_element.addClass('selected');
                }.bind(Gmaps.map.markers[i]));
                google.maps.event.addListener(Gmaps.map.markers[i].serviceObject, 'mouseout', function(event) {
                    var course_element = $('.course-element[data-location-ids~=' + this.id + ']');
                    course_element.removeClass('selected');
                }.bind(Gmaps.map.markers[i]));
            }
        };
        // TODO
        // var radius_hidden_input = $('radius-hidden-input');
        // var radius_label_value  = $('radius-label-value');
        // var start = 0;
        // new Slider('radius-slider', 'radius-knob', {
        //     range: [1, 50],
        //     step: 1,
        //     wheel: false,
        //     snap: true,
        //     initialStep: #{params[:radius]},
        //     onComplete: function(pos){
        //         start += 1;
        //         if (start > 2) { // Because the function is triggered twice at beginning...
        //             $('header-search').submit();
        //         }
        //     },
        //     onChange: function(pos){
        //         radius_hidden_input.val(pos);
        //         radius_label_value.set('text', pos);
        //     }
        // });

    });

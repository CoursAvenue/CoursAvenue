= content_for :title do
  Avis des élèves | #{@structure.name}

= content_for :meta_description do
  #{@structure.name} | Tous les avis des élèves

= content_for :right_after_head do
  %meta{ name: "robots", content: 'noindex,follow' }

.main-container.main-container--medium
  .text--center
    %h3
      = "#{@reviews.length} avis d'élèves"
    %div
      = link_to 'Déposer mon avis', new_structure_comment_url(@structure), subdomain: 'www'

  .relative{ data: { el: 'loading-indicator' } }
    .absolute.push--top{ style: 'left: 50%; margin-left: -16px;' }
      = image_tag 'gifs/loading-bubbles-orange.svg'

  .transition-all-300.invisible.transit{ data: { behavior: 'masonry' } }
    - @reviews.each do |comment|
      %article.one-half.soft-half{ itemprop: 'review', itemscope: true, itemtype:'http://schema.org/Review', data: { el: 'masonry-item' } }
        .gray-box.soft.rounded--top
          -# - if comment.user
          -#   = image_tag comment.user.avatar_url(:small), height: 60, width: 60, class: 'bordered rounded--circle'
          - if comment.title.present?
            %h6.line-height-1-3.gamma.push-half--bottom{itemprop: 'headline', content: comment.title}= "#{comment.title}"
          %span.rating{title: 'Excellent !', itemprop: 'reviewRating', itemscope: true, itemtype: 'http://schema.org/Rating'}
            %meta{itemprop: 'ratingValue', content: 5}
            %meta{itemprop: 'worstRating', content: 1}
            %meta{itemprop: 'bestRating', content: 5}
          .line-height-1-7.epsilon
            = simple_format comment.content
          .visuallyhidden{itemprop: 'itemReviewed', itemscope: true, itemtype: 'http://schema.org/Thing'}
            %meta{itemprop: 'url', content: commentable_url(comment)}
            %meta{itemprop: 'name', content: comment.commentable.name}
          %div{ id: "comment-reply-#{comment.id}" }
            - if comment.reply
              = render partial: 'comments/reply', locals: { structure: @structure, comment: comment, reply: comment.reply }
          -# - if comment.course_name
          -#   .push-half--bottom= "— #{comment.course_name.capitalize}"
          %p.text--right.flush
            = "Par #{comment.author_name}"
            %i.opacity-75{ itemprop: 'datePublished', content: l(comment.created_at, format: :iso_date) }
              il y a #{distance_of_time_in_words_to_now comment.created_at}



= content_for :scripts do
  :javascript
    $(function() {
        var masonry = new Masonry($('[data-behavior=masonry]')[0], {
            itemSelector: '[data-el=masonry-item]',
            isInitLayout: false
        });
        masonry.on( 'layoutComplete', function() {
            $('[data-behavior=masonry]').removeClass('invisible');
            $('[data-el=loading-indicator]').fadeOut();
        });
        masonry.layout();
    });

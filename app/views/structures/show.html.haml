= content_for :head do
  %link{ rel: 'canonical', href: request.path }

- if params[:c].present?
  - shared_comment = @structure.comments.find(params[:c])

- if shared_comment and shared_comment.user and shared_comment.user.has_avatar?
  = content_for :meta_image do
    = shared_comment.user.avatar_url
- elsif @structure.logo.present?
  = content_for :meta_image do
    = @structure.logo.url(:thumb)

= content_for :title do
  - if shared_comment
    = "«#{shared_comment.title}» par #{shared_comment.author_name}"
  - else
    = "#{@structure.name} | CoursAvenue"

= content_for :meta_description do
  - if shared_comment
    = truncate(shared_comment.content, length: 300)
  - elsif @structure.description.present?
    = truncate("#{@structure.description_for_meta} à #{@city.name}", length: 155)
  - else
    - if @structure.parent_subjects_string.present?
      = "#{@structure.name} à #{@city.name}. #{subjects_name_from_string(@structure.parent_subjects_string)} ! à #{@city.name}"
    - else
      = "#{@structure.name} à #{@city.name}"

.visuallyhidden#lieux-photos
  .inline-block
    - if cookies[:structure_search_path]
      = link_to cookies[:structure_search_path] do
        %i.orange ←
        = t('.back_to_results')
    - else
      = link_to structures_path do
        %i.orange ←
        = t('.see_arrounding_structures')
  .inline-block.push-half--sides
    |
  .inline-block.push-half--bottom
    %ol.nav.breadcrumb.flush{itemprop: 'breadcrumb'}
      %li
        = link_to "Tous les établissement", structures_path
      %li= @structure.name

- if !current_user and params[:waiting_for_activation]
  .blue-box.islet.text--center.push--ends
    = render 'users/waiting_for_activation_text'

%div{ itemscope: true, itemtype: "http://schema.org/Place" }
  = render partial: 'structures/structure_header', locals: { structure: @structure }
  .soft--sides
    .grid
      .grid__item.eight-twelfths.soft-half--right>
        = render partial: 'structures/map_and_gallery', locals: { medias: @medias }

        #structure-profile{ data: { type: 'structure-profile-root' } }
          - if @is_sleeping
            = render partial: 'structures/sleeping_content', locals: { medias: @medias }
          - else
            #structure-region
          %div{ data: { type: "comments-collection" } }
      .grid__item.four-twelfths>
        %div{ data: { type: 'contact-form' } }
        - unless @is_sleeping
          - if @structure.response_rate or @structure.response_time or (@structure.main_contact and @structure.main_contact.current_sign_in_at)
            .panel.push--bottom
              .panel__body.soft.epsilon
                - if @structure.response_rate
                  .grid--full.soft-half--bottom
                    .grid__item.v-middle.one-half.gray>
                      Taux de réponse
                    .grid__item.v-middle.one-half>
                      %strong= "#{@structure.response_rate}%"
                - if @structure.response_time
                  .grid--full.soft-half--bottom
                    .grid__item.v-middle.one-half.gray>
                      Temps de réponse
                    .grid__item.v-middle.one-half>
                      %strong= response_time_in_words @structure
                - if @structure.main_contact and @structure.main_contact.current_sign_in_at
                  .grid--full
                    .grid__item.v-middle.one-half.gray>
                      Dernière activité
                    .grid__item.v-middle.one-half>
                      %strong= l(@structure.main_contact.current_sign_in_at, format: :date).capitalize

          .panel.push--bottom
            .panel__header.soft-half--ends.soft--sides
              %h5.flush Actualités et offres exclusives
            .panel__body.soft
              %a.btn.btn--full{ data: { behavior: 'add-to-favorite', added_text: 'Retirer de mes favoris', not_added_text: 'Favori' } }
                %i.fa.fa-heart
                %span
              - if @structure.followers.count > 9
                %p.flush.text--center.push-half--top
                  %strong Suivi par #{@structure.followers.count} élèves

        - # This additionnal div is necessary for the husk that will be prepended
        - # to the parent of the sticky div
        %div
          %div{ data: { type: (@is_sleeping ? '' : 'sticky-map-container') }}>
            - unless @is_sleeping
              .push--bottom{ data: { type: (@is_sleeping ? '' : 'sticky-map') }}>
              %a.push--bottom.contact-button.btn--full.btn.btn--green{ data: { behavior: 'show-contact-panel' } }
                Contacter
                = I18n.t("structures.structure_type_contact.#{(@structure.structure_type.present? ? @structure.structure_type : 'structures.other')}")

            - unless @structure.premium?
              .panel.push--bottom
                .panel__header.soft-half--ends.soft--sides
                  %h5.flush Profils similaires
                .panel__body.soft-half--ends{ style: (@is_sleeping ? '' : 'height: 300px; overflow-y: scroll;') }
                  - if params[:lat] and params[:lng]
                    - _params = { lat: params[:lat], lng: params[:lng] }
                  - else
                    - _params = {}
                  - @structure.similar_profiles(21, _params).each_with_index do |structure, index|
                    - unless index == 0
                      %hr.push-half--ends
                    - cache ['similar_profiles', structure] do
                      %div{ style: 'height: 70px;' }
                        = link_to structure_path(structure), class: 'soft-half--sides block muted-link' do
                          .grid--full{ data: { similar_profile: true, structure_id: structure.id } }
                            .grid__item.v-top.one-fifth>
                              .media-photo{ itemprop: 'image', content: structure.logo.url }
                                = image_tag structure.logo.url(:thumb)
                            .grid__item.v-top.four-fifths.soft-half--left.opacity-hidden-on-hover__wrapper>
                              .nowrap
                                - if structure.premium? and header_promotion_title_for_structure(structure).present?
                                  %h6.inline-block.push-half--bottom= truncate(structure.name, length: 18)
                                  .lbl.lbl--small.lbl--yellow
                                    %i.fa.fa-star
                                    = header_promotion_title_for_structure(structure)
                                - else
                                  %h6.inline-block.push-half--bottom= truncate(structure.name, length: 30)
                              %div
                                %i= truncate(structure.places.map(&:city).map(&:name).uniq.join(', '), length: 40)
                              .btn.btn--small.btn--blue.btn--full.opacity-hidden-on-hover__child Voir le profil

- if Rails.env.production?
  = render 'tracking_pixels'

= content_for :scripts do
  :javascript
    (function () {
      window.coursavenue = window.coursavenue || {};
      window.coursavenue.bootstrap = {
          current_pro_admin: #{(current_pro_admin ? true : false)},
          structure: #{ @model.to_json },
          meta: {
              total_comments: #{ @structure.comments.accepted.count },
              structure_id  : #{ @structure.id }
          }
      };
    }());


- unless current_user
  = content_for :scripts do
    :javascript
      $(function() {
          var body_message = $('#contact-message-body').val();
          $.cookie('user_contact_message', body_message);
      });

- if Rails.env.production?
  = content_for :scripts do
    :javascript
      $(function() {
          mixpanel.track("Landed on Structure page", { "structure_slug": "#{@structure.slug}", "structure_name": "#{@structure.name}" });
      });

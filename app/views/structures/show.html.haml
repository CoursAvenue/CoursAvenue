- if @structure.logo.present?
  = content_for :meta_image do
    = @structure.logo.url(:thumb)

= content_for :title do
  = "#{@structure.name} à #{@city.name}"

= content_for :meta_description do
  - if @structure.description.present?
    = "#{@structure.description_for_meta} à #{@city.name}"
  - else
    - if @structure.parent_subjects_string.present?
      = "Retrouvez tous les cours de #{@structure.name} à #{@city.name}. #{subjects_name_from_string(@structure.parent_subjects_string)} et bien plus ! à #{@city.name}"
    - else
      = "Retrouvez tous les cours de #{@structure.name} à #{@city.name}"

.inline-block
  - if cookies[:structure_search_path]
    = link_to cookies[:structure_search_path] do
      %i.orange ←
      = t('.back_to_results')
  - else
    = link_to structures_path do
      %i.orange ←
      = t('.see_arrounding_structures')
.inline-block.push-half--sides
  |
.inline-block
  %ol.nav.breadcrumb.flush{itemprop: 'breadcrumb'}
    %li
      = link_to "Tous les établissement", structures_path
    %li= @structure.name

- if !current_user and params[:waiting_for_activation]
  .blue-box.islet.text--center.push--ends
    = render 'users/waiting_for_activation_text'

.grid.push--top
  .grid__item.eight-twelfths>
    = render partial: 'structures/structure_header', locals: {structure: @structure}

    = render partial: 'structures/map_and_gallery', locals: {structure: @structure, places: @structure.places, medias: @medias}

    -# - if @structure.has_open_course_plannings?
    -#   = render partial: 'structures/open_courses', locals: {structure: @structure}

    = render partial: 'structures/comments_headband', locals: {structure: @structure}

    #structure-profile{data: { type: 'structure-profile-root'}}

    .tabs__bar{ data: @structure_tabs_manager }

    .tabs--container
      .tab.hidden{ data: { behaviors: ['showWhenActive', 'activateOnCoursesTabClicked', 'deactivateSiblings'] }}
        %p This is a Course.
      .tab.hidden{ data: { view: 'TeachersCollection', bootstrap: @model.teachers.to_json, component: 'TabContents', for: 'teachers' }}
        %p This is a Teacher.
      .tab.hidden{ data: { component: 'TabContents', for: 'comments'}}
        %p This is a Comment.


#course_info.hidden= render 'structures/courses/info_popup'

= content_for :scripts do
  :javascript
    $(function() {
        if (window.location.hash.indexOf('recommandation-') != -1) {
            $('[href=#tab-comments]').click();
            $.scrollTo($(window.location.hash), {duration: 500});
        }
        if (window.location.hash.length > 0) {
            $('[href=' + window.location.hash + ']').click();
        }
    });

  :javascript
    var places = #{ActiveModel::ArraySerializer.new(@structure.places, each_serializer: BigPlaceSerializer).to_json};
    window.coursavenue = window.coursavenue || {};
    window.coursavenue.bootstrap = {
      model: #{ @model.to_json },
      places: places,
    };

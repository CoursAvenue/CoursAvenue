- if @courses.blank?
  = gmaps( {markers: {data: Gmaps4rails.geocode("#{params[:city]}, France").to_json}, map_options: {maxZoom: 11, mapTypeControl: false}})
- else
  = gmaps( {markers: {data: @json_structure_addresses}, map_options: {maxZoom: 15, mapTypeControl: false}})

.side-search-panel
  %h4.side-search-panel-header Affinez votre recherche :
  .search-panel-footer
    %button.btn__primary.btn{type: 'submit', data: {behavior: 'input-update', element: 'submit_search_form'}}
      %i.icon-search
      Actualiser

  //-------------------------------------------------------------------------------------------------------- Subject
  .search-panel
    %h5.search-panel-header.toggleable-header{data: {behavior: 'toggleable', el:'+ .search-panel-content'}}
      Disciplines
      %i.icon-caret-down
    .search-panel-content
      %ul.check-list
        %li= link_to t('all_subject'), city_subjects_path(@city), class: 'subject-link'
        / ----------------- If the current subject is this one or has this one as a parent
        - Subject.roots.order(:name).each do |subject|
          - if params[:id] == subject.slug || !subject.children.select{|d| d.slug == params[:id]}.blank?
            %li= link_to subject.name, city_subject_path(@city, subject), class: 'selected subject-link'
            %ul.check-list
              - subject.children.each do |child_subject|
                %li= link_to child_subject.name, city_subject_path(@city, child_subject), class: (params[:id] == child_subject.slug ? 'selected subject-link' : 'subject-link')
          - else
            %li= link_to subject.name, city_subject_path(@city, subject), class: 'subject-link'

  //-------------------------------------------------------------------------------------------------------- Type de cours
  .search-panel
    %h5.search-panel-header.toggleable-header{data: {behavior: 'toggleable', el:'+ .search-panel-content'}}
      Type de cours
      %i.icon-caret-down
    .search-panel-content
      %ul.check-list
        %li
          = check_box_tag 'types[]', 'lesson', params[:types].include?('lesson'), id: "search_lesson_course_type", data: {behavior: 'input-update', element: "hidden_search_lesson_course_type"}
          = label_tag 'search_lesson_course_type', 'Cours'
          %ul.check-list{data: {behavior: 'depend-on-parent', element: "search_lesson_course_type"}}
            %li
              = check_box_tag 'price_specificities[]', 'has_unit_course_price', params[:price_specificities].include?('has_unit_course_price'), id: "price_specificity_unit_course", data: {behavior: 'input-update', element: "hidden_price_specificity_unit_course"}
              = label_tag 'price_specificity_unit_course', "À l'unité / au carnet"
            %li
              = check_box_tag 'price_specificities[]', 'has_package_price', params[:price_specificities].include?('has_package_price'), id: "price_specificity_package", data: {behavior: 'input-update', element: "hidden_price_specificity_package"}
              = label_tag 'price_specificity_package', 'Au forfait (annuel, trimestriel, etc.)'
            %li
              = check_box_tag 'price_specificities[]', 'has_test_course', params[:price_specificities].include?('has_test_course'), id: "price_specificity_test_course", data: {behavior: 'input-update', element: "hidden_price_specificity_test_course"}
              = label_tag 'price_specificity_test_course', "Cours d'essai possible"
        %li
          = check_box_tag 'types[]', 'workshop', params[:types].include?('workshop'), id: "search_workshop_course_type", data: {behavior: 'input-update', element: "hidden_search_workshop_course_type"}
          = label_tag 'search_workshop_course_type', 'Cours-atelier ponctuel'
        %li
          = check_box_tag 'types[]', 'training', params[:types].include?('training'), id: "search_training_course_type", data: {behavior: 'input-update', element: "hidden_search_training_course_type"}
          = label_tag 'search_training_course_type', 'Stage'

  //-------------------------------------------------------------------------------------------------------- Price
  .search-panel
    %h5.search-panel-header.toggleable-header{data: {behavior: 'toggleable', el:'+ .search-panel-content'}}
      Prix
      %i.icon-caret-down
    .search-panel-content
      = label_tag 'search_price_range_min_price', 'De'
      = number_field_tag 'price_range[min]', params[:price_range][:min], min: 0, step: 1, placeholder: '35', class: 'timepicker-input', data: {behavior: 'input-update', element: 'hidden_search_price_range_min'}
      €
      = label_tag 'search_price_range_max_price', 'à'
      = number_field_tag 'price_range[max]', params[:price_range][:max], min: 0, step: 1, placeholder: '100', class: 'timepicker-input', data: {behavior: 'input-update', element: 'hidden_search_price_range_max'}
      €

  .search-panel
    %h5.search-panel-header.toggleable-header{data: {behavior: 'toggleable', el:'+ .search-panel-content'}}
      Niveaux
      %i.icon-caret-down
    .search-panel-content
      %ul.check-list
        - @levels.each_with_index do |level, i|
          %li
            = check_box_tag 'levels[]', level[:id], params[:levels].include?(level[:id].to_s), id: "search_level_#{level[:name]}", data: {behavior: 'input-update', element: "hidden_search_level_#{level[:name]}"}
            = label_tag "search_level_#{level[:name]}", t(level[:name])


  //-------------------------------------------------------------------------------------------------------- Audience
  .search-panel
    %h5.search-panel-header.toggleable-header{data: {behavior: 'toggleable', el:'+ .search-panel-content'}}
      Public
      %i.icon-caret-down
    .search-panel-content
      %ul.check-list
        - @audiences.each_with_index do |audience, i|
          %li
            = check_box_tag 'audiences[]', audience.id, params[:audiences].include?(audience.id.to_s), id: "search_audience_#{i}", data: {behavior: 'input-update', element: "hidden_search_audience_#{i}"}
            = label_tag "search_audience_#{i}", t(audience.name)
  .search-panel
    %h5.search-panel-header.toggleable-header{data: {behavior: 'toggleable', el:'+ .search-panel-content'}}
      Enfant ou adolescent
      %i.icon-caret-down
    .search-panel-content
      = label_tag 'for_min_age', 'De '
      = number_field_tag 'age[min]', params[:age][:min], min: 0, max: 18, step: 1, placeholder: '6', data: {behavior: 'input-update', element: 'hidden_search_age_min'}, id: 'for_min_age'
      = label_tag 'for_max_age', ' à '
      = number_field_tag 'age[max]', params[:age][:max], min: 0, max: 18, step: 1, placeholder: '10', data: {behavior: 'input-update', element: 'hidden_search_age_max'}, id: 'for_max_age'
      ans

  //-------------------------------------------------------------------------------------------------------- Time slot
  .search-panel
    %h5.search-panel-header.toggleable-header{data: {behavior: 'toggleable', el:'+ .search-panel-content'}}
      Créneau horaire précis
      %i.icon-caret-down
    .search-panel-content
      = label_tag 'search_time_range_min_time', 'De'
      %input.timepicker-input{name: 'time_range[min]', value: params[:time_range][:min], placeholder: '19:30', data: {behavior: 'input-update', element: 'hidden_start_time'}}
      h
      = label_tag 'search_time_range_max_time', 'à'
      %input.timepicker-input{name: 'time_range[max]', value: params[:time_range][:max], placeholder: '20:30', data: {behavior: 'input-update', element: 'hidden_end_time'}}
      h

  //-------------------------------------------------------------------------------------------------------- Places
  .search-panel
    %h5.search-panel-header.toggleable-header{data: {behavior: 'toggleable', el:'+ .search-panel-content'}}
      Arrondissement
      %i.icon-caret-down
    .search-panel-content
      %ul.check-list
        - (75001..75020).to_a.map(&:to_s).each_with_index do |zip_code, i|
          %li
            = check_box_tag 'zip_code[]', zip_code, params[:zip_codes].include?(zip_code), id: "search_arrondissement_#{zip_code}", data: {behavior: 'input-update', element: "hidden_search_arrondissement_#{zip_code}"}
            - if i < 9
              = label_tag "search_arrondissement_#{zip_code}", "Paris #{zip_code.to_s[4]}e"
            - else
              = label_tag "search_arrondissement_#{zip_code}", "Paris #{zip_code.to_s[3..4]}e"

  .search-panel-footer
    %button.btn__primary.btn{type: 'submit', data: {behavior: 'input-update', element: 'submit_search_form'}}
      %i.icon-search
      Actualiser

//-------------------------------------------------------------------------------------------------------- Gmaps
- content_for :scripts do
  :javascript
    window.addEvent('domready', function() {
        Gmaps.map.callback = function() {
            for (var i = 0; i <  this.markers.length; ++i) {
                google.maps.event.addListener(Gmaps.map.markers[i].serviceObject, 'click', function() {
                    var course_element = $$('.course-element[data-structure-id=' + this.id + ']');
                    GLOBAL.Scroller.toElement(course_element[0]);

                    // Unselect courses if there already are that are selected
                    $$('.course-element').removeClass('selected');
                    course_element.addClass('selected');
                }.bind(Gmaps.map.markers[i]));
            }
        };
    });

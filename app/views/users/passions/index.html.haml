= user_menu_currently_at 'Mes offres & passions'

= render partial: 'users/passions/tabs', locals: { current: 'passions' }

%p.alert.alert--info
  En renseignant vos lieux et vos passions, recevez les offres exclusives de nos partenaires directement depuis l'onglet "Mes offres" ou via vos "Messages" CoursAvenue : cours d'essai gratuits, promotions, invitations à des soirées ou à des spectacles...Toutes ces informations sont confidentielles et ne seront jamais publiques.


%h4.inline-block.push-half--bottom
  Renseignez vos lieux
%i.fa.fa-question-circle.pointer.delta{data: {toggle: 'popover', html: 'true', content: "<p>Renseignez les villes où vous souhaiteriez découvrir de nouveaux cours. Dans chaque ville, saisissez le rayon géographique dans lequel vous êtes prêt(e) à vous déplacer pour suivre un cours.</p><p>Ces informations de géolocalisation sont très importantes : elles nous permettent de mieux cibler vos envies pour vous proposer des cours d'essai gratuits, des promotions exclusives et des invitations à tous types d'événements situés à proximité de votre lieu d'habitation ou de votre lieu de travail, et en lien avec vos passions. Vous pourrez gérer vos paramètres de notifications (type d'information et fréquence de nos e-mails) depuis l'onglet «Notifications».<p>", trigger: 'hover', placement: 'right'}}
.lbl.lbl--gray.lbl--small.push-half--left
  %i.fa.fa-lock
  Privé

%p.blue Listez les villes où vous souhaitez suivre des cours ou découvrir de nouvelles passions.

= simple_form_for current_user do |f|
  %input{type: 'hidden', name: 'return_to', value: user_passions_path(current_user)}
  .form-white-box{data: {behavior: 'show-more-on-demand'}}
    - @lived_places.each_with_index do |lived_place, i|
      %div{data: {el: true, hidden: !lived_place.persisted?}}
        = f.simple_fields_for :lived_places, lived_place, child_index: i do |lived_place_form|
          .input.flush--top.city-autocomplete-wrapper
            = lived_place_form.label :zip_code, label: LivedPlace.human_attribute_name(:zip_code)
            = lived_place_form.input :zip_code, placeholder: 'Ex. : 75008', input_html: { data: {behavior: 'city-autocomplete', el: "#lived_place_city_id_#{i}"} }, label: false, wrapper_html: { class: 'flush--top' }
            = lived_place_form.input :city_id, collection: [lived_place.city], label: false, selected: lived_place.city, wrapper_html: { class: 'flush--top' }, input_html: { id: "lived_place_city_id_#{i}" }
            = lived_place_form.label :radius, 'dans un rayon de'
            = lived_place_form.input :radius, label: false, wrapper_html: { class: 'flush', style: 'width: 4em' }, input_html: { value: (lived_place.radius || '5'), style: 'width: 100%' }
            km
            - if lived_place.persisted?
              = link_to 'Supprimer', user_lived_place_path(current_user, lived_place), method: :delete, class: 'push-half--left'

    .grid
      .grid__item.one-quarter>
      .grid__item.three-quarters>
        %p.blue.flush
          %i Renseignez la ville et le rayon géographique (en km) dans lequel vous êtes prêt(e) à vous déplacer pour vous rendre à un cours.
        %a{href: 'javascript:void(0)', data: {trigger: true}}
          %i.fa.fa-plus
          Ajouter un lieu
    = f.submit 'Enregistrer', class: 'btn btn--green btn--full', disable_with: "En cours d'enregistrement"


%h4.inline-block.push-half--bottom
  Renseignez vos passions
%i.fa.fa-question-circle.pointer.delta{data: {toggle: 'popover', html: 'true', content: "<p>Renseignez toutes les disciplines que vous souhaitez découvrir ou redécouvrir : yoga, dessin, oenologie, art floral, zumba... il y en a plus de 500 ! Sélectionnez vos passions, indiquez les raisons qui vous motivent.</p><p>Ces informations nous permettent de mieux cibler vos envies pour vous proposer des cours d'essai gratuits, des promotions exclusives et des invitations à tous types d'événements situés à proximité de vous et en lien avec vos passions. Vous pourrez gérer vos paramètres de notifications (type d'information et fréquence de nos e-mails) depuis l'onglet «Notifications».</p>", trigger: 'hover', placement: 'right'}}
.lbl.lbl--gray.lbl--small.push-half--left
  %i.fa.fa-lock
  Privé

.white-box.islet
  = simple_form_for current_user do |f|
    %input{type: 'hidden', name: 'return_to', value: user_passions_path(current_user)}
    %h5.push-half--top Quelles sont les disciplines que vous pratiquez déjà ?
    %div{data: {behavior: 'show-more-on-demand'}}
      - @practiced_passions.each_with_index do |practiced_passion, i|
        %div{data: {el: true, hidden: !practiced_passion.persisted?}}
          = f.simple_fields_for :passions, practiced_passion, child_index: i do |practiced_passion_form|
            = practiced_passion_form.input :practiced, as: :hidden, value: true
            .grid
              .grid__item.one-quarter{ data: {behavior: 'subject-chooser', target: '+ div select'} }>
                = practiced_passion_form.input :parent_subject_id, as: :select, collection: Subject.roots.order('position ASC'), label: false, include_blank: 'Discipline générale', wrapper_html: { class: 'flush--bottom' }

              .grid__item.one-quarter>
                = practiced_passion_form.input :subject_id, as: :select, collection: (practiced_passion.subject ? practiced_passion.subject.root.descendants : []), label: false, input_html: { data: { behavior: 'chosen' }, style: 'min-width: 10em; width: 100%' }, include_blank: 'Sous discipline', wrapper_html: { class: 'flush--bottom' }

              .grid__item.one-quarter>
                = practiced_passion_form.input :frequency, as: :select, collection: Passion::FREQUENCIES, label_method: lambda {|frequency| t(frequency)}, include_blank: 'À quelle fréquence pratiquez-vous ?', label: false, input_html: { style: 'width: 100%' }, wrapper_html: { class: 'flush--bottom' }

              .grid__item.one-quarter>
                = practiced_passion_form.input :reason_ids, as: :select, collection: PassionReason.all, label_method: lambda {|reason| t(reason.name)}, label: false, input_html: { style: 'width: 100%', multiple: true, data: { behavior: 'chosen', placeholder: 'Que recherchez-vous ?' }}, wrapper_html: { class: 'flush--bottom' }
            - if practiced_passion.persisted?
              = link_to 'Supprimer cette passion', user_passion_path(@user, practiced_passion), method: :delete, class: 'push-half--left'
            %hr.push-half--ends
      %a{href: 'javascript:void(0)', data: {trigger: true}}
        %i.fa.fa-plus
        Ajouter une passion

    %hr.push--ends
    %h5.push-half--top Quelles sont les disciplines que vous aimeriez pratiquer ?
    %div{data: {behavior: 'show-more-on-demand'}}
      - @wanted_passions.each_with_index do |wanted_passion, i|
        - i += 100
        %div{data: {el: true, hidden: !wanted_passion.persisted?}}
          = f.simple_fields_for :passions, wanted_passion, child_index: i do |wanted_passion_form|
            = wanted_passion_form.input :practiced, as: :hidden, value: false
            .grid
              .grid__item.one-quarter{ data: {behavior: 'subject-chooser', target: '+ div select'} }>
                = wanted_passion_form.input :parent_subject_id, as: :select, collection: Subject.roots.order('position ASC'), label: false, include_blank: 'Discipline générale', wrapper_html: { class: 'flush--bottom' }
              .grid__item.one-quarter>
                = wanted_passion_form.input :subject_id, as: :select, collection: (wanted_passion.subject ? wanted_passion.subject.root.descendants : []), label: false, input_html: { data: { behavior: 'chosen' }, style: 'min-width: 10em; width: 100%' }, include_blank: 'Sous discipline', wrapper_html: { class: 'flush--bottom' }
              .grid__item.one-quarter>
                = wanted_passion_form.input :frequency, as: :select, collection: Passion::FREQUENCIES, label_method: lambda {|frequency| t(frequency)}, include_blank: 'À quelle fréquence souhaitez-vous pratiquer ?', label: false, input_html: { style: 'width: 100%' }, wrapper_html: { class: 'flush--bottom' }
              .grid__item.one-quarter>
                = wanted_passion_form.input :expectation_ids, as: :select, collection: PassionExpectation.all, label_method: lambda { |reason| t(reason.name) }, label: false, input_html: { multiple: true, data: { behavior: 'chosen', placeholder: 'Pour quelles raisons ?' }, style: 'width: 100%'}, wrapper_html: { class: 'flush--bottom' }
            - if wanted_passion.persisted?
              = link_to 'Supprimer cette passion', user_passion_path(@user, wanted_passion), method: :delete
            %hr.push-half--ends

      %a{href: 'javascript:void(0)', data: {trigger: true}}
        %i.fa.fa-plus
        Ajouter une passion

    %hr.push--ends


    %div.push--top.push-half--bottom
      %strong En savoir un petit peu plus sur vous
      %i.fa.fa-question-circle.pointer.delta{data: {toggle: 'popover', html: 'true', content: "<p>CoursAvenue est basé sur les relations et les passions. Aidez-nous à mieux vous connaître :</p><ul><li>Quelles sont les 5 choses dont vous ne pourriez pas vous passer ?</li><li>Avez-vous une devise dans la vie ? Voici celle de l'équipe CoursAvenue : \"la chance sourit aux audacieux\" ;</li><li>Partagez vos livres, films, musiques, restaurants, voyages préférés ;</li></ul class=\"push-half--left\"><p>Dites ce que c'est de vous avoir en tant qu'élève. Pourquoi vous aimez tant apprendre et suivre des cours ? Que représentent pour vous vos passions ? Pourquoi sont-elles si importantes dans votre vie ?</p>", trigger: 'hover', placement: 'right'}}


    .push--top= f.submit 'Enregistrer', class: 'btn btn--full btn--green'

= content_for :scripts do
  :javascript
    $(function() {
        var descendants_subjects_path = "#{descendants_subjects_url(ids: '__ID__')}";
        // Each group of select
        $('[data-behavior=subject-chooser]').each(function() {
            var child_subject_select = $(this).find($(this).data('target'));
            // When the general subject change
            $(this).find('select').change(function() {
                child_subject_select.empty();
                // Go and search for associate descendants subjects
                $.ajax({
                    url: descendants_subjects_path.replace('__ID__', this.value),
                    success: function(subject_parents) {
                        // Populate the options
                        child_subject_select.append($('<option>'));
                        _.each(subject_parents, function(subject_parent) {
                            var option_group_label = _.keys(subject_parent)[0];
                            var option_group = $('<optgroup>').attr('label', option_group_label);
                            _.each(_.values(subject_parent)[0], function(subject) {
                                option_group.append($('<option>').val(subject.id).text(subject.name))
                            });
                            child_subject_select.append(option_group);
                        });
                        child_subject_select.trigger('chosen:updated');
                    }
                });
            });
        });
    });

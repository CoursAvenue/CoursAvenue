#!/bin/bash -e
# Inspired by:
# * https://gist.github.com/aliou/80f4a7977a29109d0ebc
# * http://robots.thoughtbot.com/the-unix-shells-humble-if
#
# TODO: Store app_name (coursavenue, coursavenue-staging) in env.
# TODO: Store staging deploy term ([deploy]) in env.

APP_NAME=$1
REPOSITORY="http://github.com/coursavenue/coursavenue"

# Fetch the last commits on the remote.
git remote add heroku git@heroku.com:$APP_NAME.git
git fetch heroku

# Check if the deploy is necessary.
#
# The deploy is necessary when:
# - We push a branch with the term 'staging:deploy' somewhere in the commits, or
# - We push the branch master in production.
STAGING_DEPLOY=$(git log heroku/master..HEAD | grep '\[deploy\]' | wc -l)

if [[ $APP_NAME == "coursavenue-staging" ]] && (( $STAGING_DEPLOY == 0 )); then
  echo "[CIRCLECI_DEPLOY] No deployment needed."
  exit
fi

# Fetch the last commits on the remote.
git remote add heroku git@heroku.com:$APP_NAME.git
git fetch heroku

# Deploy the code. (This might take a while, up to 30 minutes.)
# We force push on staging because we don't always update from the same branch.
# After the deployment, we notify Bugsnag so it can show us when bug are introduced.
echo "[CIRCLECI_DEPLOY] Deploying code."
if [[ $APP_NAME == "coursavenue-staging" ]]; then
  git push heroku $CIRCLE_SHA1:master -f
  DEPLOY_SUCCESS=$?
  RELEASE_STAGE="staging"
else
  git push heroku $CIRCLE_SHA1:master
  DEPLOY_SUCCESS=$?
  RELEASE_STAGE="production"
fi

echo "[CIRCLECI_DEPLOY] Notifying Bugsnag."
if (( $DEPLOY_SUCCESS == 0)); then
  curl -d "apiKey=${BUGSNAG_API_KEY}&releaseStage=${RELEASE_STAGE}&repository=${REPOSITORY}&revision=${CIRCLE_SHA1}&branch=${CIRCLE_BRANCH}" http://notify.bugsnag.com/deploy
fi

# Check if the deploy requires a migration.
REQUIRES_MIGRATION=$(git diff HEAD heroku/master --name-only -- db | wc -l)

# Run migrations if needed.
if (( $REQUIRES_MIGRATION )) && (( $DEPLOY_SUCCESS == 0 )); then
  echo "[CIRCLECI_DEPLOY] Running migration."
  heroku run rake db:migrate -a $APP_NAME
fi
